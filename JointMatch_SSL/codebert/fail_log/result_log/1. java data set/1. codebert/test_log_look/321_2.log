=======dev_loader=======
=======train_labeled_loader=======
=======finish=======
>>Epoch 0 Step 0 acc_test 0.134969 f1_test 0.057090 acc_val 0.116564 f1_val 0.048973 acc_train 0.085714 f1_train 0.028571 psl_cor 0 psl_totl 0 pslt_global 0.000000 Tim 0:00:45
acc_train_cw [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.6]
cw_psl_eval:  [0, 0, 0, 0, 0, 0, 0] [0, 0, 0, 0, 0, 0, 0]
psl_acc: None cw_psl_acc:  [nan, nan, nan, nan, nan, nan, nan]
Save model to ./experiment/test/output/
line 453
리스트에 True가 포함되어 있지 않습니다.
line 453
리스트에 True가 포함되어 있지 않습니다.
line 453
리스트에 True가 포함되어 있지 않습니다.
line 453
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(33)get_pseudo_labeled_dataloader()
-> for data, label, mask in zip(ul_data['input_ids'], ul_label, ul_list_tensor):
(Pdb) print(data)
*** NameError: name 'data' is not defined
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(34)get_pseudo_labeled_dataloader()
-> print("line 34")
(Pdb) n
line 34
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(35)get_pseudo_labeled_dataloader()
-> print( label, mask)
(Pdb) print(data)
tensor([  101, 12324,  9262,  1012, 21183,  4014,  1012,  1008,  1025, 12324,
         9262,  1012, 11374,  1012,  1008,  1025, 12324,  9262,  1012, 22834,
         1012,  1008,  1025,  2270,  2465, 27984,  1063,  2270, 10763, 11675,
         2364,  1006,  5164, 12098,  5620,  1031,  1033,  1007,  1063, 26221,
         1039,  1027,  2047, 26221,  1006,  2291,  1012,  1999,  1007,  1025,
         5164,  2193,  1027,  1039,  1012,  2279,  4179,  1006,  1007,  1025,
        20014,  1045,  1027, 16109,  1012, 11968, 20240,  3372,  1006,  2193,
         1007,  1025,  2065,  1006,  1045,  1027,  1027,  1015,  1007,  1063,
         2291,  1012,  2041,  1012,  6140, 19666,  1006,  1000,  2053,  1000,
         1007,  1025,  2709,  1025,  1065,  5164,  2240,  1027,  1039,  1012,
         2279,  4179,  1006,  1007,  1025,  5164,  1031,  1033, 12098,  2099,
         1027,  2240,  1012,  3975,  1006,  1000,  1000,  1007,  1025, 20014,
         1031,  1033,  9140,  1027,  2047, 20014,  1031,  1045,  1033,  1025,
         2005,  1006, 20014,  1046,  1027,  1014,  1025,  1046,  1026,  1045,
         1025,  1046,  1009,  1009,  1007,  1063,  9140,  1031,  1046,  1033,
         1027, 16109,  1012, 11968, 20240,  3372,  1006, 12098,  2099,  1031,
         1046,  1033,  1007,  1025,  1065, 20014,  8117,  1027,  9140,  1031,
         1014,  1033,  1025, 20014,  2117,  1027,  1014,  1025, 22017, 20898,
         2518,  1027,  6270,  1025,  2005,  1006, 20014,  1046,  1027,  1014,
         1025,  1046,  1026,  1045,  1025,  1046,  1009,  1009,  1007,  1063,
         2065,  1006,   999,  2518,  1004,  1004,  9140,  1031,  1046,  1033,
         1028,  8117,  1007,  1063,  2117,  1027,  9140,  1031,  1046,  1033,
         1025,  2518,  1027,  2995,  1025,  1065,  2065,  1006,  9140,  1031,
         1046,  1033,  1026,  8117,  1007,  1063,  2117,  1027,  8117,  1025,
         8117,  1027,  9140,  1031,  1046,  1033,  1025,  2518,  1027,  2995,
         1025,  1065,  2842,  2065,   102])
(Pdb) print(data.size)
<built-in method size of Tensor object at 0x7f9014227680>
(Pdb) print(data.size())
torch.Size([255])
(Pdb) n
tensor(6, device='cuda:0') tensor(False, device='cuda:0')
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(36)get_pseudo_labeled_dataloader()
-> input()
(Pdb) n
n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(37)get_pseudo_labeled_dataloader()
-> if mask.item():   # Check if the label is in the list of pseudo-labels
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(33)get_pseudo_labeled_dataloader()
-> for data, label, mask in zip(ul_data['input_ids'], ul_label, ul_list_tensor):
(Pdb) print(mask.item())
False
(Pdb) print(mask)
tensor(False, device='cuda:0')
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(34)get_pseudo_labeled_dataloader()
-> print("line 34")
(Pdb) n
line 34
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(35)get_pseudo_labeled_dataloader()
-> print( label, mask)
(Pdb) n
tensor(5, device='cuda:0') tensor(False, device='cuda:0')
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(36)get_pseudo_labeled_dataloader()
-> input()
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(37)get_pseudo_labeled_dataloader()
-> if mask.item():   # Check if the label is in the list of pseudo-labels
(Pdb) print(ul_list)
[tensor([False, False,  True, False, False, False, False], device='cuda:0')]
(Pdb) print(mask)
tensor(False, device='cuda:0')
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(33)get_pseudo_labeled_dataloader()
-> for data, label, mask in zip(ul_data['input_ids'], ul_label, ul_list_tensor):
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(34)get_pseudo_labeled_dataloader()
-> print("line 34")
(Pdb) n
line 34
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(35)get_pseudo_labeled_dataloader()
-> print( label, mask)
(Pdb) n
tensor(5, device='cuda:0') tensor(True, device='cuda:0')
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(36)get_pseudo_labeled_dataloader()
-> input()
(Pdb) 
n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(37)get_pseudo_labeled_dataloader()
-> if mask.item():   # Check if the label is in the list of pseudo-labels
(Pdb) print(mask)
tensor(True, device='cuda:0')
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(39)get_pseudo_labeled_dataloader()
-> pseudo_labeled_data = {'problem': data, 'pseudo_label': label.item()}
(Pdb) pesudo_labeled_data
*** NameError: name 'pesudo_labeled_data' is not defined
(Pdb) print(pesudo_labeled_data)
*** NameError: name 'pesudo_labeled_data' is not defined
(Pdb) print(pseudo_labeled_data)
*** NameError: name 'pseudo_labeled_data' is not defined
(Pdb) print(pseudo_labeled_data)
*** NameError: name 'pseudo_labeled_data' is not defined
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(40)get_pseudo_labeled_dataloader()
-> pseudo_labeled_dataset.append(pseudo_labeled_data)
(Pdb) print(pseudo_labeled_data)
{'problem': tensor([  101, 12324,  9262,  1012, 22834,  1012, 24880,  2906,  9447,  2378,
        18780, 21422,  1025, 12324,  9262,  1012, 22834,  1012, 22834, 10288,
        24422,  1025, 12324,  9262,  1012, 22834,  1012, 20407, 25379,  1025,
        12324,  9262,  1012, 22834,  1012,  6140, 15994,  1025, 12324,  9262,
         1012, 21183,  4014,  1012,  9140,  9863,  1025, 12324,  9262,  1012,
        21183,  4014,  1012, 27448,  1025, 12324,  9262,  1012, 21183,  4014,
         1012,  7953, 26725,  4017,  5403,  2595, 24422,  1025, 12324,  9262,
         1012, 21183,  4014,  1012,  2862,  1025,  2270,  2465,  2364,  1063,
         2797, 10763,  2345,  5164,  2053,  1027,  1000,  2053,  1000,  1025,
         2797, 10763,  2345,  5164,  2748,  1027,  1000,  2748,  1000,  1025,
        20407, 25379,  2003,  1025,  6140, 15994,  2041,  1025,  5164,  7953,
         1027,  1000,  1000,  1025,  2797, 10763,  2345,  2146, 16913,  1027,
         6694,  8889,  8889,  2692,  2581,  1025,  2797, 10763,  2345, 20014,
         4098,  2078,  1027,  6694,  8889,  1025, 11675,  9611,  1006,  1007,
         1063, 20014,  1056,  1027,  1015,  1025,  1013,  1013,  9152,  1006,
         1007,  1025,  2005,  1006, 20014,  1045,  1027,  1014,  1025,  1045,
         1026,  1056,  1025,  1045,  1009,  1009,  1007,  1063,  9611,  1006,
         1045,  1007,  1025,  1065,  1065, 11675,  9611,  1006, 20014,  1056,
         1007,  1063, 20014,  1050,  1027,  9152,  1006,  1007,  1025, 20014,
         1049,  1027,  9152,  1006,  1007,  1025, 20014,  1047,  1027,  9152,
         1006,  1007,  1025, 20014,  1044,  1031,  1033,  1031,  1033,  1027,
         6583,  1006,  1050,  1010,  1049,  1011,  1015,  1007,  1025, 20014,
         1058,  1031,  1033,  1031,  1033,  1027,  6583,  1006,  1050,  1011,
         1015,  1010,  1049,  1007,  1025,  2065,  1006,  1047,  1003,  1016,
         1027,  1027,  1015,  1007,  1063,  2005,  1006, 20014,  1054,  1027,
         1014,  1025,  1054,  1026,   102]), 'pseudo_label': 5}
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(33)get_pseudo_labeled_dataloader()
-> for data, label, mask in zip(ul_data['input_ids'], ul_label, ul_list_tensor):
(Pdb) print(pseudo_labeled_dataset)
[{'problem': tensor([  101, 12324,  9262,  1012, 22834,  1012, 24880,  2906,  9447,  2378,
        18780, 21422,  1025, 12324,  9262,  1012, 22834,  1012, 22834, 10288,
        24422,  1025, 12324,  9262,  1012, 22834,  1012, 20407, 25379,  1025,
        12324,  9262,  1012, 22834,  1012,  6140, 15994,  1025, 12324,  9262,
         1012, 21183,  4014,  1012,  9140,  9863,  1025, 12324,  9262,  1012,
        21183,  4014,  1012, 27448,  1025, 12324,  9262,  1012, 21183,  4014,
         1012,  7953, 26725,  4017,  5403,  2595, 24422,  1025, 12324,  9262,
         1012, 21183,  4014,  1012,  2862,  1025,  2270,  2465,  2364,  1063,
         2797, 10763,  2345,  5164,  2053,  1027,  1000,  2053,  1000,  1025,
         2797, 10763,  2345,  5164,  2748,  1027,  1000,  2748,  1000,  1025,
        20407, 25379,  2003,  1025,  6140, 15994,  2041,  1025,  5164,  7953,
         1027,  1000,  1000,  1025,  2797, 10763,  2345,  2146, 16913,  1027,
         6694,  8889,  8889,  2692,  2581,  1025,  2797, 10763,  2345, 20014,
         4098,  2078,  1027,  6694,  8889,  1025, 11675,  9611,  1006,  1007,
         1063, 20014,  1056,  1027,  1015,  1025,  1013,  1013,  9152,  1006,
         1007,  1025,  2005,  1006, 20014,  1045,  1027,  1014,  1025,  1045,
         1026,  1056,  1025,  1045,  1009,  1009,  1007,  1063,  9611,  1006,
         1045,  1007,  1025,  1065,  1065, 11675,  9611,  1006, 20014,  1056,
         1007,  1063, 20014,  1050,  1027,  9152,  1006,  1007,  1025, 20014,
         1049,  1027,  9152,  1006,  1007,  1025, 20014,  1047,  1027,  9152,
         1006,  1007,  1025, 20014,  1044,  1031,  1033,  1031,  1033,  1027,
         6583,  1006,  1050,  1010,  1049,  1011,  1015,  1007,  1025, 20014,
         1058,  1031,  1033,  1031,  1033,  1027,  6583,  1006,  1050,  1011,
         1015,  1010,  1049,  1007,  1025,  2065,  1006,  1047,  1003,  1016,
         1027,  1027,  1015,  1007,  1063,  2005,  1006, 20014,  1054,  1027,
         1014,  1025,  1054,  1026,   102]), 'pseudo_label': 5}]
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(34)get_pseudo_labeled_dataloader()
-> print("line 34")
(Pdb) n
line 34
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(35)get_pseudo_labeled_dataloader()
-> print( label, mask)
(Pdb) n
tensor(6, device='cuda:0') tensor(False, device='cuda:0')
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(36)get_pseudo_labeled_dataloader()
-> input()
(Pdb) n
n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(37)get_pseudo_labeled_dataloader()
-> if mask.item():   # Check if the label is in the list of pseudo-labels
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(33)get_pseudo_labeled_dataloader()
-> for data, label, mask in zip(ul_data['input_ids'], ul_label, ul_list_tensor):
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(34)get_pseudo_labeled_dataloader()
-> print("line 34")
(Pdb) n
line 34
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(35)get_pseudo_labeled_dataloader()
-> print( label, mask)
(Pdb) n
tensor(1, device='cuda:0') tensor(False, device='cuda:0')
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(36)get_pseudo_labeled_dataloader()
-> input()
(Pdb) n
n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(37)get_pseudo_labeled_dataloader()
-> if mask.item():   # Check if the label is in the list of pseudo-labels
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(33)get_pseudo_labeled_dataloader()
-> for data, label, mask in zip(ul_data['input_ids'], ul_label, ul_list_tensor):
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(34)get_pseudo_labeled_dataloader()
-> print("line 34")
(Pdb) n
line 34
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(35)get_pseudo_labeled_dataloader()
-> print( label, mask)
(Pdb) n
tensor(5, device='cuda:0') tensor(False, device='cuda:0')
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(36)get_pseudo_labeled_dataloader()
-> input()
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(37)get_pseudo_labeled_dataloader()
-> if mask.item():   # Check if the label is in the list of pseudo-labels
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(33)get_pseudo_labeled_dataloader()
-> for data, label, mask in zip(ul_data['input_ids'], ul_label, ul_list_tensor):
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(34)get_pseudo_labeled_dataloader()
-> print("line 34")
(Pdb) n
line 34
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(35)get_pseudo_labeled_dataloader()
-> print( label, mask)
(Pdb) n
tensor(1, device='cuda:0') tensor(False, device='cuda:0')
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(36)get_pseudo_labeled_dataloader()
-> input()
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(37)get_pseudo_labeled_dataloader()
-> if mask.item():   # Check if the label is in the list of pseudo-labels
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(33)get_pseudo_labeled_dataloader()
-> for data, label, mask in zip(ul_data['input_ids'], ul_label, ul_list_tensor):
(Pdb) 
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(43)get_pseudo_labeled_dataloader()
-> combined_dataset = torch.utils.data.ConcatDataset([train_labeled_loader] + pseudo_labeled_dataset)
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(46)get_pseudo_labeled_dataloader()
-> combined_loader = torch.utils.data.DataLoader(combined_dataset, batch_size=bs, shuffle=True)
(Pdb) n
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(48)get_pseudo_labeled_dataloader()
-> print(len(train_labeled_loader))
(Pdb) print(combined_dataset)
<torch.utils.data.dataset.ConcatDataset object at 0x7f90163d46d0>
(Pdb) print(combined_dataset.size()
*** SyntaxError: unexpected EOF while parsing
(Pdb) print(combined_dataset.size())
*** AttributeError: 'ConcatDataset' object has no attribute 'size'
(Pdb) n
5
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(49)get_pseudo_labeled_dataloader()
-> print(pseudo_labeled_dataset)
(Pdb) print(combind_loader)
*** NameError: name 'combind_loader' is not defined
(Pdb) print(combined_loader)
<torch.utils.data.dataloader.DataLoader object at 0x7f90161898b0>
(Pdb) n
[{'problem': tensor([  101, 12324,  9262,  1012, 22834,  1012, 24880,  2906,  9447,  2378,
        18780, 21422,  1025, 12324,  9262,  1012, 22834,  1012, 22834, 10288,
        24422,  1025, 12324,  9262,  1012, 22834,  1012, 20407, 25379,  1025,
        12324,  9262,  1012, 22834,  1012,  6140, 15994,  1025, 12324,  9262,
         1012, 21183,  4014,  1012,  9140,  9863,  1025, 12324,  9262,  1012,
        21183,  4014,  1012, 27448,  1025, 12324,  9262,  1012, 21183,  4014,
         1012,  7953, 26725,  4017,  5403,  2595, 24422,  1025, 12324,  9262,
         1012, 21183,  4014,  1012,  2862,  1025,  2270,  2465,  2364,  1063,
         2797, 10763,  2345,  5164,  2053,  1027,  1000,  2053,  1000,  1025,
         2797, 10763,  2345,  5164,  2748,  1027,  1000,  2748,  1000,  1025,
        20407, 25379,  2003,  1025,  6140, 15994,  2041,  1025,  5164,  7953,
         1027,  1000,  1000,  1025,  2797, 10763,  2345,  2146, 16913,  1027,
         6694,  8889,  8889,  2692,  2581,  1025,  2797, 10763,  2345, 20014,
         4098,  2078,  1027,  6694,  8889,  1025, 11675,  9611,  1006,  1007,
         1063, 20014,  1056,  1027,  1015,  1025,  1013,  1013,  9152,  1006,
         1007,  1025,  2005,  1006, 20014,  1045,  1027,  1014,  1025,  1045,
         1026,  1056,  1025,  1045,  1009,  1009,  1007,  1063,  9611,  1006,
         1045,  1007,  1025,  1065,  1065, 11675,  9611,  1006, 20014,  1056,
         1007,  1063, 20014,  1050,  1027,  9152,  1006,  1007,  1025, 20014,
         1049,  1027,  9152,  1006,  1007,  1025, 20014,  1047,  1027,  9152,
         1006,  1007,  1025, 20014,  1044,  1031,  1033,  1031,  1033,  1027,
         6583,  1006,  1050,  1010,  1049,  1011,  1015,  1007,  1025, 20014,
         1058,  1031,  1033,  1031,  1033,  1027,  6583,  1006,  1050,  1011,
         1015,  1010,  1049,  1007,  1025,  2065,  1006,  1047,  1003,  1016,
         1027,  1027,  1015,  1007,  1063,  2005,  1006, 20014,  1054,  1027,
         1014,  1025,  1054,  1026,   102]), 'pseudo_label': 5}]
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(51)get_pseudo_labeled_dataloader()
-> print("line 44 => data batch" , len(combined_loader))
(Pdb) n
line 44 => data batch 1
> /home/imsuhan22/few-shot-tc/JointMatch_SSL/codebert/code/main_SSL.py(52)get_pseudo_labeled_dataloader()
-> input()
(Pdb) print(combined_loader.size())
*** AttributeError: 'DataLoader' object has no attribute 'size'
(Pdb) print(len(combined_loader))
1
(Pdb) print(trian_labeled_loader
*** SyntaxError: unexpected EOF while parsing
(Pdb) print(trian_labeled_loader)
*** NameError: name 'trian_labeled_loader' is not defined
(Pdb) print(tain_labeled_loader)
*** NameError: name 'tain_labeled_loader' is not defined
(Pdb) print(train_labeled_loader)
<torch.utils.data.dataloader.DataLoader object at 0x7f9048811640>
(Pdb) print(len(train_labeled_loader))
5
(Pdb) print(train_labeled_loader.item())
*** AttributeError: 'DataLoader' object has no attribute 'item'
(Pdb) print(iter(train_labeled_loader))
<torch.utils.data.dataloader._SingleProcessDataLoaderIter object at 0x7f9014a16700>
(Pdb) print(iter(train_labeled_loader).next())
{'x': {'input_ids': tensor([[  101, 12324,  9262,  ...,  1012,  4066,   102],
        [  101, 12324,  9262,  ...,     0,     0,     0],
        [  101,  1013,  1008,  ..., 18447,  1006,   102],
        ...,
        [  101, 12324,  9262,  ..., 20014,  1999,   102],
        [  101, 12324,  9262,  ...,  1031,  1033,   102],
        [  101, 12324,  9262,  ..., 10763, 22017,   102]]), 'token_type_ids': tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]]), 'attention_mask': tensor([[1, 1, 1,  ..., 1, 1, 1],
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 1, 1, 1],
        ...,
        [1, 1, 1,  ..., 1, 1, 1],
        [1, 1, 1,  ..., 1, 1, 1],
        [1, 1, 1,  ..., 1, 1, 1]])}, 'x_w': {'input_ids': tensor([[  101, 12324,  9262,  ...,  1025, 27448,   102],
        [  101, 12324,  9262,  ...,     0,     0,     0],
        [  101,  1013,  1008,  ..., 18447,  1006,   102],
        ...,
        [  101, 12324,  9262,  ...,  2345, 20014,   102],
        [  101, 12324,  9262,  ...,  1031,  1033,   102],
        [  101, 12324,  9262,  ...,  2270, 10763,   102]]), 'token_type_ids': tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]]), 'attention_mask': tensor([[1, 1, 1,  ..., 1, 1, 1],
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 1, 1, 1],
        ...,
        [1, 1, 1,  ..., 1, 1, 1],
        [1, 1, 1,  ..., 1, 1, 1],
        [1, 1, 1,  ..., 1, 1, 1]])}, 'x_s': None, 'label': tensor([3, 0, 4, 2, 5, 6, 1])}
(Pdb) print(iter(train_labeled_loader).next()['x']['input_ids'])
tensor([[  101, 12324,  9262,  ..., 10763, 22017,   102],
        [  101, 12324,  9262,  ...,  6309,  3388,   102],
        [  101, 12324,  9262,  ...,  1025,  1046,   102],
        ...,
        [  101, 12324,  9262,  ...,  1007,  1063,   102],
        [  101, 12324,  9262,  ...,  1999,  1010,   102],
        [  101, 12324,  9262,  ..., 20014,  1045,   102]])
(Pdb) print(iter(train_labeled_loader).next()['x']['input_ids'].size())
torch.Size([7, 255])
(Pdb) print(pseudo_labeled_dataset)
[{'problem': tensor([  101, 12324,  9262,  1012, 22834,  1012, 24880,  2906,  9447,  2378,
        18780, 21422,  1025, 12324,  9262,  1012, 22834,  1012, 22834, 10288,
        24422,  1025, 12324,  9262,  1012, 22834,  1012, 20407, 25379,  1025,
        12324,  9262,  1012, 22834,  1012,  6140, 15994,  1025, 12324,  9262,
         1012, 21183,  4014,  1012,  9140,  9863,  1025, 12324,  9262,  1012,
        21183,  4014,  1012, 27448,  1025, 12324,  9262,  1012, 21183,  4014,
         1012,  7953, 26725,  4017,  5403,  2595, 24422,  1025, 12324,  9262,
         1012, 21183,  4014,  1012,  2862,  1025,  2270,  2465,  2364,  1063,
         2797, 10763,  2345,  5164,  2053,  1027,  1000,  2053,  1000,  1025,
         2797, 10763,  2345,  5164,  2748,  1027,  1000,  2748,  1000,  1025,
        20407, 25379,  2003,  1025,  6140, 15994,  2041,  1025,  5164,  7953,
         1027,  1000,  1000,  1025,  2797, 10763,  2345,  2146, 16913,  1027,
         6694,  8889,  8889,  2692,  2581,  1025,  2797, 10763,  2345, 20014,
         4098,  2078,  1027,  6694,  8889,  1025, 11675,  9611,  1006,  1007,
         1063, 20014,  1056,  1027,  1015,  1025,  1013,  1013,  9152,  1006,
         1007,  1025,  2005,  1006, 20014,  1045,  1027,  1014,  1025,  1045,
         1026,  1056,  1025,  1045,  1009,  1009,  1007,  1063,  9611,  1006,
         1045,  1007,  1025,  1065,  1065, 11675,  9611,  1006, 20014,  1056,
         1007,  1063, 20014,  1050,  1027,  9152,  1006,  1007,  1025, 20014,
         1049,  1027,  9152,  1006,  1007,  1025, 20014,  1047,  1027,  9152,
         1006,  1007,  1025, 20014,  1044,  1031,  1033,  1031,  1033,  1027,
         6583,  1006,  1050,  1010,  1049,  1011,  1015,  1007,  1025, 20014,
         1058,  1031,  1033,  1031,  1033,  1027,  6583,  1006,  1050,  1011,
         1015,  1010,  1049,  1007,  1025,  2065,  1006,  1047,  1003,  1016,
         1027,  1027,  1015,  1007,  1063,  2005,  1006, 20014,  1054,  1027,
         1014,  1025,  1054,  1026,   102]), 'pseudo_label': 5}]
(Pdb) print(iter(train_labeled_loader).next()['x']['input_ids'])
tensor([[  101, 12324,  9262,  ..., 17698,  2098,   102],
        [  101, 12324,  9262,  ...,  1065,  2270,   102],
        [  101,  1013,  1013,  ...,  4098,  1006,   102],
        ...,
        [  101, 12324, 10763,  ...,  1007,  1063,   102],
        [  101, 12324,  9262,  ...,  1026,  1049,   102],
        [  101, 12324,  9262,  ...,  1012,  8117,   102]])
(Pdb) print(iter(train_labeled_loader).next()['x']['input_ids'])+pseudo_labeled_dataset['problem'])
*** SyntaxError: unmatched ')'
(Pdb) print(iter(train_labeled_loader).next()['x']['input_ids']+pseudo_labeled_dataset['problem'])
*** TypeError: list indices must be integers or slices, not str