current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code
Data set -> jointmatch
save_name: 5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_37_[45]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding']
**tokenizer type =  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding'] 

n_labeled_per_class:  5
train_df samples: 739
train_labeled_df samples: 25
train_unlabeled_df samples: 714
Check n_smaples_per_class in the original training set:  {3: 306, 5: 154, 1: 121, 4: 114, 2: 44}
Check n_smaples_per_class in the labeled training set:  {4: 5, 3: 5, 2: 5, 5: 5, 1: 5}
Check n_smaples_per_class in the unlabeled training set:  {3: 301, 5: 149, 1: 116, 4: 109, 2: 39}
n_classes:  5

net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.0003 
lr_linear:  0.001 


net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.00025 
lr_linear:  0.001 

Step 0  Tim 0:00:10

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.2, 0.6]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Save model to ./experiment/jointmatch/output/
loss for labeled data =>  tensor(1.6089, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6142, device='cuda:0', grad_fn=<NllLossBackward0>)
Epoch 1/37, Train Acc: 0.1600, Val Acc: 0.2347, Test Acc: 0.2211, Test F1(macro): 0.1331, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 5  Tim 0:00:26

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 0.0, 0.0, 0.4]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 2/37, Train Acc: 0.4800, Val Acc: 0.2041, Test Acc: 0.2000, Test F1(macro): 0.1737, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 10  Tim 0:00:39

acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 0.2, 0.4, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Save model to ./experiment/jointmatch/output/
Epoch 3/37, Train Acc: 0.6800, Val Acc: 0.3878, Test Acc: 0.3053, Test F1(macro): 0.2978, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 15  Tim 0:01:14

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 0.8, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Save model to ./experiment/jointmatch/output/
Epoch 4/37, Train Acc: 0.9600, Val Acc: 0.3980, Test Acc: 0.3263, Test F1(macro): 0.3505, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 20  Tim 0:01:49

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 0.8, 1.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 5/37, Train Acc: 0.9200, Val Acc: 0.2449, Test Acc: 0.2000, Test F1(macro): 0.1783, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 25  Tim 0:02:03

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Save model to ./experiment/jointmatch/output/
Epoch 6/37, Train Acc: 1.0000, Val Acc: 0.4286, Test Acc: 0.2842, Test F1(macro): 0.2598, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 30  Tim 0:02:33

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 0.8, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 7/37, Train Acc: 0.9600, Val Acc: 0.4082, Test Acc: 0.2842, Test F1(macro): 0.3421, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 35  Tim 0:02:47

acc_train_cw(현재 train의 class별 acc) [0.8, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 8/37, Train Acc: 0.9600, Val Acc: 0.3878, Test Acc: 0.2737, Test F1(macro): 0.2525, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 40  Tim 0:03:02

acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Save model to ./experiment/jointmatch/output/
Epoch 9/37, Train Acc: 0.9600, Val Acc: 0.4796, Test Acc: 0.3789, Test F1(macro): 0.4249, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 45  Tim 0:03:31

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 0.8, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 10/37, Train Acc: 0.9600, Val Acc: 0.4592, Test Acc: 0.3053, Test F1(macro): 0.3900, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 50  Tim 0:03:44

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 0.8, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 11/37, Train Acc: 0.9200, Val Acc: 0.2857, Test Acc: 0.2421, Test F1(macro): 0.2452, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 55  Tim 0:03:59

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 0.6, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 12/37, Train Acc: 0.9200, Val Acc: 0.3265, Test Acc: 0.2842, Test F1(macro): 0.2765, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 60  Tim 0:04:13

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 0.4]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 13/37, Train Acc: 0.8800, Val Acc: 0.1735, Test Acc: 0.2737, Test F1(macro): 0.2449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 65  Tim 0:04:27

acc_train_cw(현재 train의 class별 acc) [0.4, 1.0, 1.0, 0.8, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 14/37, Train Acc: 0.8400, Val Acc: 0.2857, Test Acc: 0.2947, Test F1(macro): 0.3272, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 70  Tim 0:04:41

acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 1.0, 0.8, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 15/37, Train Acc: 0.9200, Val Acc: 0.3061, Test Acc: 0.3263, Test F1(macro): 0.3536, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 75  Tim 0:04:54

acc_train_cw(현재 train의 class별 acc) [0.6, 0.8, 0.0, 0.8, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 16/37, Train Acc: 0.6400, Val Acc: 0.2551, Test Acc: 0.2737, Test F1(macro): 0.2555, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 80  Tim 0:05:09

acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 0.8, 0.8, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [1, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  1.0 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [1.0, nan, nan, nan, nan]
Epoch 17/37, Train Acc: 0.8400, Val Acc: 0.3163, Test Acc: 0.3474, Test F1(macro): 0.3740, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 85  Tim 0:05:23

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 18/37, Train Acc: 1.0000, Val Acc: 0.3776, Test Acc: 0.2737, Test F1(macro): 0.3108, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 90  Tim 0:05:37

acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 19/37, Train Acc: 0.9600, Val Acc: 0.2449, Test Acc: 0.2526, Test F1(macro): 0.3162, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 95  Tim 0:05:51

acc_train_cw(현재 train의 class별 acc) [0.6, 0.8, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 20/37, Train Acc: 0.8800, Val Acc: 0.3367, Test Acc: 0.2632, Test F1(macro): 0.3200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 100  Tim 0:06:05

acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 0.6, 0.8, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 21/37, Train Acc: 0.8400, Val Acc: 0.3061, Test Acc: 0.3053, Test F1(macro): 0.3750, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 105  Tim 0:06:19

acc_train_cw(현재 train의 class별 acc) [0.4, 0.8, 0.6, 0.8, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 22/37, Train Acc: 0.7200, Val Acc: 0.3061, Test Acc: 0.2316, Test F1(macro): 0.2716, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 110  Tim 0:06:32

acc_train_cw(현재 train의 class별 acc) [0.8, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 23/37, Train Acc: 0.9600, Val Acc: 0.2143, Test Acc: 0.2316, Test F1(macro): 0.1986, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 115  Tim 0:06:46

acc_train_cw(현재 train의 class별 acc) [0.4, 1.0, 0.4, 0.8, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 24/37, Train Acc: 0.7200, Val Acc: 0.2551, Test Acc: 0.2316, Test F1(macro): 0.2326, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 120  Tim 0:07:00

acc_train_cw(현재 train의 class별 acc) [0.8, 0.8, 0.6, 1.0, 0.2]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [2, 0, 1, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [1, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.333 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.5, nan, 0.0, nan, nan]
Epoch 25/37, Train Acc: 0.6800, Val Acc: 0.1939, Test Acc: 0.2947, Test F1(macro): 0.2939, Total Pseudo-Labels: 3, Correct Pseudo-Labels: 1
Step 125  Tim 0:07:14

acc_train_cw(현재 train의 class별 acc) [0.8, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [3, 3, 1, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [1, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.143 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.3333333432674408, 0.0, 0.0, nan, nan]
Epoch 26/37, Train Acc: 0.9600, Val Acc: 0.2551, Test Acc: 0.2526, Test F1(macro): 0.2697, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 130  Tim 0:07:28

acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 0.8, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [2, 0, 1, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [1, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.333 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.5, nan, 0.0, nan, nan]
Epoch 27/37, Train Acc: 0.9200, Val Acc: 0.2857, Test Acc: 0.2842, Test F1(macro): 0.3509, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 135  Tim 0:07:41

acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 0.8, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 2, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 2, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  1.0 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 1.0, nan, nan, nan]
Epoch 28/37, Train Acc: 0.9200, Val Acc: 0.2959, Test Acc: 0.2737, Test F1(macro): 0.2988, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 140  Tim 0:07:55

acc_train_cw(현재 train의 class별 acc) [0.8, 1.0, 0.8, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 3, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.0 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.0, nan, nan, nan]
Epoch 29/37, Train Acc: 0.9200, Val Acc: 0.2143, Test Acc: 0.1789, Test F1(macro): 0.1736, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 145  Tim 0:08:08

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 30/37, Train Acc: 1.0000, Val Acc: 0.2755, Test Acc: 0.3368, Test F1(macro): 0.3557, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0
Step 150  Tim 0:08:23

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 1, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.0 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.0, nan, nan, nan]
Epoch 31/37, Train Acc: 1.0000, Val Acc: 0.2755, Test Acc: 0.3053, Test F1(macro): 0.3401, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 155  Tim 0:08:36

acc_train_cw(현재 train의 class별 acc) [0.8, 0.8, 0.8, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 32/37, Train Acc: 0.8800, Val Acc: 0.2959, Test Acc: 0.3158, Test F1(macro): 0.3676, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0
Step 160  Tim 0:08:50

acc_train_cw(현재 train의 class별 acc) [0.8, 0.8, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 1, 0, 0, 1]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 1, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.5 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 1.0, nan, nan, 0.0]
Epoch 33/37, Train Acc: 0.9200, Val Acc: 0.2959, Test Acc: 0.3053, Test F1(macro): 0.3558, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0
Step 165  Tim 0:09:04

acc_train_cw(현재 train의 class별 acc) [0.6, 1.0, 0.8, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1, 1, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 1, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.5 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.0, 1.0, nan, nan, nan]
Epoch 34/37, Train Acc: 0.8800, Val Acc: 0.2449, Test Acc: 0.3263, Test F1(macro): 0.3570, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0
Step 170  Tim 0:09:17

acc_train_cw(현재 train의 class별 acc) [0.6, 1.0, 0.6, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [3, 1, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 1, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.25 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.0, 1.0, nan, nan, nan]
Epoch 35/37, Train Acc: 0.8400, Val Acc: 0.2245, Test Acc: 0.2000, Test F1(macro): 0.1705, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 1
Step 175  Tim 0:09:32

acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 0.6, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [3, 2, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [1, 1, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.4 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.3333333432674408, 0.5, nan, nan, nan]
Epoch 36/37, Train Acc: 0.8800, Val Acc: 0.3061, Test Acc: 0.2737, Test F1(macro): 0.3371, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0
Step 180  Tim 0:09:46

acc_train_cw(현재 train의 class별 acc) [0.8, 0.8, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
Epoch 37/37, Train Acc: 0.9200, Val Acc: 0.3673, Test Acc: 0.3263, Test F1(macro): 0.3477, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0

Training complete!
Total training took 0:09:51 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_37_[45]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_37_[45]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/codet5p/joint_match//5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_37_[45]_{'corcode'}/training_statistics.csv


Best_step:  40 
Best_val_epoch:  9 
best_val_acc:  0.47959183673469385 
best_val_test_acc:  0.37894736842105264 
best_val_test_f1:  0.4248553745105469
Save best record in:  ./experiment/jointmatch/log/codet5p/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
