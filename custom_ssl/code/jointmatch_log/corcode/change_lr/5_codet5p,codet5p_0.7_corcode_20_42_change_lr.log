current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs for corcod =>  5
Data set -> jointmatch
save_name: 5_['codet5p', 'codet5p']_[2e-05, 3e-05]_0.7_jointmatch_20_[42]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding']
**tokenizer type =  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding'] 

n_labeled_per_class:  5
train_df samples: 739
train_labeled_df samples: 25
train_unlabeled_df samples: 714
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 116), (2, 39), (3, 301), (4, 109), (5, 149)])
n_classes:  5

net_arch:  Salesforce/codet5p-110m-embedding 
lr:  2e-05 
lr_linear:  0.001 


net_arch:  Salesforce/codet5p-110m-embedding 
lr:  3e-05 
lr_linear:  0.001 

**pseudo_label ->  [0.2, 0.1891, 0.2015, 0.1947, 0.2148] **
max =  0.2148 | max_idx =  4
**pseudo_label ->  [0.2027, 0.1922, 0.2047, 0.195, 0.2055] **
max =  0.2055 | max_idx =  4
**pseudo_label ->  [0.1973, 0.1852, 0.204, 0.1954, 0.2181] **
max =  0.2181 | max_idx =  4
**pseudo_label ->  [0.2001, 0.1884, 0.2107, 0.1938, 0.207] **
max =  0.2107 | max_idx =  2
**pseudo_label ->  [0.2049, 0.1896, 0.2109, 0.1895, 0.2051] **
max =  0.2109 | max_idx =  2
acc_train_cw(현재 train의 class별 acc) [1.0, 0.6, 0.4, 0.8, 0.6]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6157, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5915, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 5, Time: 0:01:49
Train F1: 0.7032, Val F1: 0.2976, Test F1: 0.3141
Epoch 1/20, Train Acc: 0.6800, Val Acc: 0.2653, Test Acc: 0.3053, Test F1(macro): 0.3141, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.2038, 0.1829, 0.2042, 0.2063, 0.2028] **
max =  0.2063 | max_idx =  3
**pseudo_label ->  [0.2037, 0.189, 0.2069, 0.2114, 0.1889] **
max =  0.2114 | max_idx =  3
**pseudo_label ->  [0.2049, 0.196, 0.1999, 0.196, 0.2033] **
max =  0.2049 | max_idx =  0
**pseudo_label ->  [0.1972, 0.1935, 0.2127, 0.1877, 0.2089] **
max =  0.2127 | max_idx =  2
**pseudo_label ->  [0.1957, 0.1946, 0.2135, 0.19, 0.2062] **
max =  0.2135 | max_idx =  2
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 0.6, 1.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5268, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5005, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 10, Time: 0:03:33
Train F1: 0.8763, Val F1: 0.2751, Test F1: 0.2243
Epoch 2/20, Train Acc: 0.8800, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.2243, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.1949, 0.1905, 0.2127, 0.1827, 0.2192] **
max =  0.2192 | max_idx =  4
**pseudo_label ->  [0.1836, 0.1794, 0.213, 0.2323, 0.1916] **
max =  0.2323 | max_idx =  3
**pseudo_label ->  [0.2014, 0.1803, 0.2069, 0.2201, 0.1912] **
max =  0.2201 | max_idx =  3
**pseudo_label ->  [0.1897, 0.1792, 0.2047, 0.2382, 0.1882] **
max =  0.2382 | max_idx =  3
**pseudo_label ->  [0.2554, 0.1624, 0.1896, 0.196, 0.1967] **
max =  0.2554 | max_idx =  0
acc_train_cw(현재 train의 class별 acc) [1.0, 0.6, 0.4, 1.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3901, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3495, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 15, Time: 0:05:36
Train F1: 0.7516, Val F1: 0.3762, Test F1: 0.3761
Epoch 3/20, Train Acc: 0.7600, Val Acc: 0.3163, Test Acc: 0.3158, Test F1(macro): 0.3761, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.1744, 0.1972, 0.193, 0.207, 0.2284] **
max =  0.2284 | max_idx =  4
**pseudo_label ->  [0.2056, 0.1842, 0.2058, 0.2123, 0.1921] **
max =  0.2123 | max_idx =  3
**pseudo_label ->  [0.1832, 0.235, 0.1849, 0.1628, 0.2341] **
max =  0.235 | max_idx =  1
**pseudo_label ->  [0.1733, 0.1971, 0.2255, 0.1716, 0.2325] **
max =  0.2325 | max_idx =  4
**pseudo_label ->  [0.1881, 0.1738, 0.2266, 0.2044, 0.2071] **
max =  0.2266 | max_idx =  2
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 0.6, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3590, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2799, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 20, Time: 0:07:42
Train F1: 0.9167, Val F1: 0.3618, Test F1: 0.3125
Epoch 4/20, Train Acc: 0.9200, Val Acc: 0.3878, Test Acc: 0.3579, Test F1(macro): 0.3125, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.2486, 0.1757, 0.1975, 0.1681, 0.2101] **
max =  0.2486 | max_idx =  0
**pseudo_label ->  [0.2552, 0.1901, 0.2108, 0.166, 0.1778] **
max =  0.2552 | max_idx =  0
**pseudo_label ->  [0.2252, 0.1902, 0.1956, 0.1619, 0.2271] **
max =  0.2271 | max_idx =  4
**pseudo_label ->  [0.2977, 0.1664, 0.1883, 0.1672, 0.1804] **
max =  0.2977 | max_idx =  0
**pseudo_label ->  [0.1792, 0.1694, 0.2119, 0.2584, 0.181] **
max =  0.2584 | max_idx =  3
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 0.8, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2673, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2399, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 25, Time: 0:09:27
Train F1: 0.9596, Val F1: 0.3376, Test F1: 0.3239
Epoch 5/20, Train Acc: 0.9600, Val Acc: 0.3673, Test Acc: 0.2947, Test F1(macro): 0.3239, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.1644, 0.1973, 0.2267, 0.1804, 0.2312] **
max =  0.2312 | max_idx =  4
**pseudo_label ->  [0.158, 0.2137, 0.248, 0.1647, 0.2156] **
max =  0.248 | max_idx =  2
**pseudo_label ->  [0.165, 0.16, 0.2286, 0.2605, 0.186] **
max =  0.2605 | max_idx =  3
**pseudo_label ->  [0.1751, 0.1684, 0.2136, 0.2647, 0.1782] **
max =  0.2647 | max_idx =  3
**pseudo_label ->  [0.183, 0.1647, 0.2369, 0.242, 0.1734] **
max =  0.242 | max_idx =  3
acc_train_cw(현재 train의 class별 acc) [0.4, 1.0, 0.2, 0.2, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2190, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1681, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:11:12
Train F1: 0.5429, Val F1: 0.0959, Test F1: 0.1203
Epoch 6/20, Train Acc: 0.5600, Val Acc: 0.1327, Test Acc: 0.1684, Test F1(macro): 0.1203, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.1769, 0.1766, 0.267, 0.1917, 0.1878] **
max =  0.267 | max_idx =  2
**pseudo_label ->  [0.1785, 0.1701, 0.2497, 0.1641, 0.2376] **
max =  0.2497 | max_idx =  2
**pseudo_label ->  [0.2072, 0.1498, 0.1743, 0.2153, 0.2534] **
max =  0.2534 | max_idx =  4
**pseudo_label ->  [0.1549, 0.2019, 0.2089, 0.1669, 0.2674] **
max =  0.2674 | max_idx =  4
**pseudo_label ->  [0.1583, 0.2255, 0.1797, 0.1718, 0.2647] **
max =  0.2647 | max_idx =  4
acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 1.0, 1.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2111, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1670, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 35, Time: 0:12:57
Train F1: 0.9222, Val F1: 0.2296, Test F1: 0.3047
Epoch 7/20, Train Acc: 0.9200, Val Acc: 0.4490, Test Acc: 0.3684, Test F1(macro): 0.3047, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.1499, 0.1706, 0.2282, 0.25, 0.2013] **
max =  0.25 | max_idx =  3
**pseudo_label ->  [0.1869, 0.1557, 0.2574, 0.2286, 0.1715] **
max =  0.2574 | max_idx =  2
**pseudo_label ->  [0.1994, 0.1764, 0.2487, 0.1801, 0.1954] **
max =  0.2487 | max_idx =  2
**pseudo_label ->  [0.3254, 0.1614, 0.1687, 0.157, 0.1875] **
max =  0.3254 | max_idx =  0
**pseudo_label ->  [0.2309, 0.1488, 0.2438, 0.2031, 0.1734] **
max =  0.2438 | max_idx =  2
acc_train_cw(현재 train의 class별 acc) [0.4, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.1971, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1487, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 0:14:42
Train F1: 0.8681, Val F1: 0.2944, Test F1: 0.2708
Epoch 8/20, Train Acc: 0.8800, Val Acc: 0.3163, Test Acc: 0.3053, Test F1(macro): 0.2708, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.2366, 0.1458, 0.2441, 0.1515, 0.222] **
max =  0.2441 | max_idx =  2
**pseudo_label ->  [0.1976, 0.1925, 0.2459, 0.1863, 0.1776] **
max =  0.2459 | max_idx =  2
**pseudo_label ->  [0.2231, 0.1628, 0.242, 0.1297, 0.2423] **
max =  0.2423 | max_idx =  4
**pseudo_label ->  [0.1862, 0.2028, 0.2743, 0.156, 0.1806] **
max =  0.2743 | max_idx =  2
**pseudo_label ->  [0.191, 0.1786, 0.2642, 0.1947, 0.1715] **
max =  0.2642 | max_idx =  2
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 0.8, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.1552, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1309, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 45, Time: 0:16:26
Train F1: 0.9596, Val F1: 0.4184, Test F1: 0.4177
Epoch 9/20, Train Acc: 0.9600, Val Acc: 0.4490, Test Acc: 0.4105, Test F1(macro): 0.4177, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.3209, 0.1626, 0.1964, 0.1437, 0.1764] **
max =  0.3209 | max_idx =  0
**pseudo_label ->  [0.1695, 0.143, 0.1891, 0.308, 0.1904] **
max =  0.308 | max_idx =  3
**pseudo_label ->  [0.2022, 0.1417, 0.2336, 0.2551, 0.1673] **
max =  0.2551 | max_idx =  3
**pseudo_label ->  [0.1817, 0.1658, 0.3004, 0.1576, 0.1945] **
max =  0.3004 | max_idx =  2
**pseudo_label ->  [0.1891, 0.1511, 0.3085, 0.1762, 0.1751] **
max =  0.3085 | max_idx =  2
acc_train_cw(현재 train의 class별 acc) [0.6, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.1460, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1526, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 0:18:11
Train F1: 0.9167, Val F1: 0.4188, Test F1: 0.3394
Epoch 10/20, Train Acc: 0.9200, Val Acc: 0.3980, Test Acc: 0.3579, Test F1(macro): 0.3394, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.1619, 0.2358, 0.2592, 0.1876, 0.1555] **
max =  0.2592 | max_idx =  2
**pseudo_label ->  [0.3209, 0.192, 0.145, 0.1644, 0.1777] **
max =  0.3209 | max_idx =  0
**pseudo_label ->  [0.2908, 0.2172, 0.1805, 0.1468, 0.1648] **
max =  0.2908 | max_idx =  0
**pseudo_label ->  [0.2358, 0.1897, 0.1825, 0.1906, 0.2014] **
max =  0.2358 | max_idx =  0
**pseudo_label ->  [0.1861, 0.1943, 0.255, 0.1719, 0.1926] **
max =  0.255 | max_idx =  2
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 0.4, 0.4, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.1436, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1201, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 55, Time: 0:19:55
Train F1: 0.7381, Val F1: 0.2590, Test F1: 0.3394
Epoch 11/20, Train Acc: 0.7600, Val Acc: 0.2449, Test Acc: 0.3053, Test F1(macro): 0.3394, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.1788, 0.1492, 0.1717, 0.3031, 0.1973] **
max =  0.3031 | max_idx =  3
**pseudo_label ->  [0.154, 0.2294, 0.2119, 0.1378, 0.2668] **
max =  0.2668 | max_idx =  4
**pseudo_label ->  [0.2513, 0.1768, 0.2526, 0.168, 0.1512] **
max =  0.2526 | max_idx =  2
**pseudo_label ->  [0.1804, 0.1774, 0.1656, 0.1453, 0.3313] **
max =  0.3313 | max_idx =  4
**pseudo_label ->  [0.175, 0.1617, 0.2735, 0.1545, 0.2353] **
max =  0.2735 | max_idx =  2
acc_train_cw(현재 train의 class별 acc) [0.4, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.1173, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1293, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 60, Time: 0:21:57
Train F1: 0.8628, Val F1: 0.4178, Test F1: 0.3850
Epoch 12/20, Train Acc: 0.8800, Val Acc: 0.5204, Test Acc: 0.4105, Test F1(macro): 0.3850, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.1714, 0.1774, 0.1562, 0.1626, 0.3325] **
max =  0.3325 | max_idx =  4
**pseudo_label ->  [0.1735, 0.1478, 0.2796, 0.2293, 0.1698] **
max =  0.2796 | max_idx =  2
**pseudo_label ->  [0.1669, 0.1386, 0.1967, 0.3113, 0.1865] **
max =  0.3113 | max_idx =  3
**pseudo_label ->  [0.17, 0.1461, 0.1568, 0.2491, 0.278] **
max =  0.278 | max_idx =  4
**pseudo_label ->  [0.1657, 0.1511, 0.2313, 0.2866, 0.1654] **
max =  0.2866 | max_idx =  3
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.1247, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1290, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 65, Time: 0:23:42
Train F1: 1.0000, Val F1: 0.4162, Test F1: 0.4168
Epoch 13/20, Train Acc: 1.0000, Val Acc: 0.3571, Test Acc: 0.3263, Test F1(macro): 0.4168, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.1633, 0.2961, 0.1817, 0.164, 0.1949] **
max =  0.2961 | max_idx =  1
**pseudo_label ->  [0.3492, 0.1671, 0.1572, 0.1559, 0.1706] **
max =  0.3492 | max_idx =  0
**pseudo_label ->  [0.3504, 0.1614, 0.1631, 0.1603, 0.1648] **
max =  0.3504 | max_idx =  0
**pseudo_label ->  [0.1545, 0.2003, 0.3049, 0.1537, 0.1867] **
max =  0.3049 | max_idx =  2
**pseudo_label ->  [0.1995, 0.1788, 0.2939, 0.1351, 0.1927] **
max =  0.2939 | max_idx =  2
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.1068, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1375, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 0:25:27
Train F1: 1.0000, Val F1: 0.4855, Test F1: 0.3415
Epoch 14/20, Train Acc: 1.0000, Val Acc: 0.4796, Test Acc: 0.3474, Test F1(macro): 0.3415, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.3491, 0.1495, 0.1683, 0.1571, 0.1759] **
max =  0.3491 | max_idx =  0
**pseudo_label ->  [0.3522, 0.1497, 0.161, 0.1566, 0.1804] **
max =  0.3522 | max_idx =  0
**pseudo_label ->  [0.3138, 0.1552, 0.1826, 0.1675, 0.1809] **
max =  0.3138 | max_idx =  0
**pseudo_label ->  [0.1591, 0.1666, 0.1583, 0.3064, 0.2096] **
max =  0.3064 | max_idx =  3
**pseudo_label ->  [0.1805, 0.1635, 0.1595, 0.1552, 0.3412] **
max =  0.3412 | max_idx =  4
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.0897, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.0806, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 75, Time: 0:27:31
Train F1: 1.0000, Val F1: 0.5747, Test F1: 0.3676
Epoch 15/20, Train Acc: 1.0000, Val Acc: 0.5714, Test Acc: 0.4211, Test F1(macro): 0.3676, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.2016, 0.1519, 0.2768, 0.2282, 0.1415] **
max =  0.2768 | max_idx =  2
**pseudo_label ->  [0.1904, 0.1817, 0.2102, 0.1376, 0.2801] **
max =  0.2801 | max_idx =  4
**pseudo_label ->  [0.1748, 0.1556, 0.1664, 0.3318, 0.1714] **
max =  0.3318 | max_idx =  3
**pseudo_label ->  [0.147, 0.1699, 0.2104, 0.2917, 0.181] **
max =  0.2917 | max_idx =  3
**pseudo_label ->  [0.1585, 0.2436, 0.1747, 0.1421, 0.2812] **
max =  0.2812 | max_idx =  4
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.0843, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.0569, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 0:28:57
Train F1: 1.0000, Val F1: 0.4771, Test F1: 0.4184
Epoch 16/20, Train Acc: 1.0000, Val Acc: 0.4592, Test Acc: 0.4000, Test F1(macro): 0.4184, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.3114, 0.166, 0.1822, 0.1628, 0.1776] **
max =  0.3114 | max_idx =  0
**pseudo_label ->  [0.1893, 0.1417, 0.1573, 0.2905, 0.2212] **
max =  0.2905 | max_idx =  3
**pseudo_label ->  [0.1421, 0.1741, 0.2845, 0.1512, 0.2481] **
max =  0.2845 | max_idx =  2
**pseudo_label ->  [0.1477, 0.157, 0.2891, 0.1603, 0.2459] **
max =  0.2891 | max_idx =  2
**pseudo_label ->  [0.1969, 0.1364, 0.2446, 0.1961, 0.2261] **
max =  0.2446 | max_idx =  2
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.0807, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.0360, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 85, Time: 0:30:42
Train F1: 1.0000, Val F1: 0.5142, Test F1: 0.3777
Epoch 17/20, Train Acc: 1.0000, Val Acc: 0.5408, Test Acc: 0.3895, Test F1(macro): 0.3777, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.1657, 0.1731, 0.3284, 0.1722, 0.1605] **
max =  0.3284 | max_idx =  2
**pseudo_label ->  [0.1934, 0.1477, 0.1714, 0.3217, 0.1657] **
max =  0.3217 | max_idx =  3
**pseudo_label ->  [0.3543, 0.1505, 0.1725, 0.1587, 0.164] **
max =  0.3543 | max_idx =  0
**pseudo_label ->  [0.1654, 0.1754, 0.3055, 0.2028, 0.1509] **
max =  0.3055 | max_idx =  2
**pseudo_label ->  [0.155, 0.1758, 0.3251, 0.1761, 0.1679] **
max =  0.3251 | max_idx =  2
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.0726, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.0257, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 0:32:27
Train F1: 1.0000, Val F1: 0.5081, Test F1: 0.4267
Epoch 18/20, Train Acc: 1.0000, Val Acc: 0.4796, Test Acc: 0.4105, Test F1(macro): 0.4267, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.1668, 0.1289, 0.2152, 0.2989, 0.1903] **
max =  0.2989 | max_idx =  3
**pseudo_label ->  [0.1819, 0.1741, 0.3241, 0.1448, 0.175] **
max =  0.3241 | max_idx =  2
**pseudo_label ->  [0.1606, 0.1365, 0.1855, 0.3154, 0.202] **
max =  0.3154 | max_idx =  3
**pseudo_label ->  [0.1703, 0.1335, 0.2973, 0.2294, 0.1694] **
max =  0.2973 | max_idx =  2
**pseudo_label ->  [0.1857, 0.152, 0.3066, 0.1828, 0.173] **
max =  0.3066 | max_idx =  2
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.0653, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.0176, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 95, Time: 0:34:12
Train F1: 1.0000, Val F1: 0.5371, Test F1: 0.3948
Epoch 19/20, Train Acc: 1.0000, Val Acc: 0.5408, Test Acc: 0.3895, Test F1(macro): 0.3948, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

**pseudo_label ->  [0.1775, 0.1497, 0.2559, 0.2704, 0.1466] **
max =  0.2704 | max_idx =  3
**pseudo_label ->  [0.1555, 0.1554, 0.2692, 0.173, 0.2469] **
max =  0.2692 | max_idx =  2
**pseudo_label ->  [0.2197, 0.1635, 0.2551, 0.217, 0.1447] **
max =  0.2551 | max_idx =  2
**pseudo_label ->  [0.1697, 0.1534, 0.1651, 0.343, 0.1688] **
max =  0.343 | max_idx =  3
**pseudo_label ->  [0.1397, 0.2378, 0.1989, 0.1467, 0.2768] **
max =  0.2768 | max_idx =  4
acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.0582, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.0081, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 0:35:53
Train F1: 1.0000, Val F1: 0.5304, Test F1: 0.4044
Epoch 20/20, Train Acc: 1.0000, Val Acc: 0.5306, Test Acc: 0.3789, Test F1(macro): 0.4044, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25


Training complete!
Total training took 0:35:53 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[2e-05, 3e-05]_0.7_jointmatch_20_[42]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[2e-05, 3e-05]_0.7_jointmatch_20_[42]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/codet5p/joint_match//5_['codet5p', 'codet5p']_[2e-05, 3e-05]_0.7_jointmatch_20_[42]_{'corcode'}/training_statistics.csv


Best_step:  75 
Best_val_epoch:  15 
best_val_acc:  0.5714285714285714 
best_val_test_acc:  0.42105263157894735 
best_val_test_f1:  0.3676277056277056
Save best record in:  ./experiment/jointmatch/log/codet5p/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
