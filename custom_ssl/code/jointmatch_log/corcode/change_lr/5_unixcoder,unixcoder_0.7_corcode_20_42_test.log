current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs for corcod =>  5
Data set -> jointmatch
save_name: 5_['unixcoder', 'unixcoder']_[1e-05, 2e-06]_0.7_jointmatch_20_[42]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 2 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base']
**tokenizer type =  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base'] 

n_labeled_per_class:  5
train_df samples: 739
train_labeled_df samples: 25
train_unlabeled_df samples: 714
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 116), (2, 39), (3, 301), (4, 109), (5, 149)])
n_classes:  5

net_arch:  microsoft/unixcoder-base 
lr:  1e-05 
lr_linear:  0.001 


net_arch:  microsoft/unixcoder-base 
lr:  2e-06 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [0.2, 0.8, 0.2, 0.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8400, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8346, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 5, Time: 0:02:21
Train F1: 0.3214, Val F1: 0.2116, Test F1: 0.1855
Epoch 1/20, Train Acc: 0.4000, Val Acc: 0.2449, Test Acc: 0.2105, Test F1(macro): 0.1855, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.4, 1.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 1, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 1, 0, 0]
psl_acc(PSL 평가에서의 정확도):  1.0 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 1.0, nan, nan]
loss for labeled data =>  tensor(1.3347, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5990, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 10, Time: 0:04:16
Train F1: 0.4012, Val F1: 0.3146, Test F1: 0.2455
Epoch 2/20, Train Acc: 0.4800, Val Acc: 0.5102, Test Acc: 0.4211, Test F1(macro): 0.2455, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.4, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(0.8294, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3635, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 15, Time: 0:05:47
Train F1: 0.3472, Val F1: 0.2212, Test F1: 0.2092
Epoch 3/20, Train Acc: 0.4800, Val Acc: 0.2551, Test Acc: 0.2842, Test F1(macro): 0.2092, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 5, 351, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 4, 64, 0]
psl_acc(PSL 평가에서의 정확도):  0.191 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.800000011920929, 0.18233618140220642, nan]
loss for labeled data =>  tensor(0.8040, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3547, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 20, Time: 0:07:25
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 4/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 671, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 106, 0]
psl_acc(PSL 평가에서의 정확도):  0.158 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.15797317028045654, nan]
loss for labeled data =>  tensor(1.6940, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.7860, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 25, Time: 0:09:03
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 5/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 668, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 100, 0]
psl_acc(PSL 평가에서의 정확도):  0.15 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.1497005969285965, nan]
loss for labeled data =>  tensor(2.3165, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.6142, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:10:41
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 6/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 637, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 97, 0]
psl_acc(PSL 평가에서의 정확도):  0.152 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.15227629244327545, nan]
loss for labeled data =>  tensor(1.2132, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.4735, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 35, Time: 0:12:18
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 7/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1, 1, 2, 636, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [1, 1, 1, 103, 0]
psl_acc(PSL 평가에서의 정확도):  0.166 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [1.0, 1.0, 0.5, 0.16194967925548553, nan]
loss for labeled data =>  tensor(0.8416, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.1095, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 0:13:50
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 8/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.2, 0.0, 0.4, 1.0, 0.6]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1, 0, 6, 630, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [1, 0, 3, 101, 0]
psl_acc(PSL 평가에서의 정확도):  0.165 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [1.0, nan, 0.5, 0.16031746566295624, nan]
loss for labeled data =>  tensor(0.3749, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.0082, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 45, Time: 0:15:27
Train F1: 0.4012, Val F1: 0.0562, Test F1: 0.0724
Epoch 9/20, Train Acc: 0.4400, Val Acc: 0.1429, Test Acc: 0.2211, Test F1(macro): 0.0724, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.2, 0.6, 0.8, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 5, 6, 631, 6]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 5, 3, 100, 3]
psl_acc(PSL 평가에서의 정확도):  0.171 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 1.0, 0.5, 0.15847860276699066, 0.5]
loss for labeled data =>  tensor(0.2928, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8918, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 0:17:05
Train F1: 0.7013, Val F1: 0.1137, Test F1: 0.0897
Epoch 10/20, Train Acc: 0.7200, Val Acc: 0.1531, Test Acc: 0.2316, Test F1(macro): 0.0897, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.2, 0.8, 0.8, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 1, 4, 654, 14]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 1, 2, 103, 3]
psl_acc(PSL 평가에서의 정확도):  0.162 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 1.0, 0.5, 0.15749235451221466, 0.2142857164144516]
loss for labeled data =>  tensor(0.1146, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6770, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 55, Time: 0:18:43
Train F1: 0.7374, Val F1: 0.1570, Test F1: 0.1730
Epoch 11/20, Train Acc: 0.7600, Val Acc: 0.1633, Test Acc: 0.2526, Test F1(macro): 0.1730, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.4, 0.6, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [2, 2, 4, 661, 22]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [1, 2, 2, 104, 7]
psl_acc(PSL 평가에서의 정확도):  0.168 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.5, 1.0, 0.5, 0.15733736753463745, 0.3181818127632141]
loss for labeled data =>  tensor(0.0893, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.0235, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 0:20:21
Train F1: 0.7890, Val F1: 0.1137, Test F1: 0.1057
Epoch 12/20, Train Acc: 0.8000, Val Acc: 0.1531, Test Acc: 0.2421, Test F1(macro): 0.1057, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.6, 0.8, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 1, 5, 628, 23]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 1, 3, 103, 7]
psl_acc(PSL 평가에서의 정확도):  0.174 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 1.0, 0.6000000238418579, 0.16401274502277374, 0.30434781312942505]
loss for labeled data =>  tensor(0.0633, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2185, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 65, Time: 0:22:00
Train F1: 0.8763, Val F1: 0.1137, Test F1: 0.1730
Epoch 13/20, Train Acc: 0.8800, Val Acc: 0.1531, Test Acc: 0.2526, Test F1(macro): 0.1730, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.8, 0.8, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1, 1, 7, 643, 27]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [1, 1, 4, 104, 8]
psl_acc(PSL 평가에서의 정확도):  0.174 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [1.0, 1.0, 0.5714285969734192, 0.16174183785915375, 0.29629629850387573]
loss for labeled data =>  tensor(0.0498, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.0074, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 0:23:30
Train F1: 0.9192, Val F1: 0.1573, Test F1: 0.2213
Epoch 14/20, Train Acc: 0.9200, Val Acc: 0.1633, Test Acc: 0.2632, Test F1(macro): 0.2213, Total Pseudo-Labels: 2, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.8, 0.8, 0.6, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 4, 7, 651, 27]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 4, 4, 104, 8]
psl_acc(PSL 평가에서의 정확도):  0.174 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 1.0, 0.5714285969734192, 0.15975423157215118, 0.29629629850387573]
loss for labeled data =>  tensor(0.0576, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(0.6885, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 75, Time: 0:25:08
Train F1: 0.8412, Val F1: 0.1998, Test F1: 0.2171
Epoch 15/20, Train Acc: 0.8400, Val Acc: 0.1837, Test Acc: 0.2526, Test F1(macro): 0.2171, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.6, 0.8, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 5, 14, 616, 24]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 5, 7, 100, 8]
psl_acc(PSL 평가에서의 정확도):  0.182 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 1.0, 0.5, 0.16233766078948975, 0.3333333432674408]
loss for labeled data =>  tensor(0.2087, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(0.8184, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 0:26:46
Train F1: 0.8763, Val F1: 0.1766, Test F1: 0.2698
Epoch 16/20, Train Acc: 0.8800, Val Acc: 0.1837, Test Acc: 0.2842, Test F1(macro): 0.2698, Total Pseudo-Labels: 3, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.6, 0.8, 0.8, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 12, 24, 595, 26]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 11, 14, 101, 8]
psl_acc(PSL 평가에서의 정확도):  0.204 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.9166666865348816, 0.5833333134651184, 0.16974790394306183, 0.3076923191547394]
loss for labeled data =>  tensor(0.0380, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(0.5522, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 85, Time: 0:28:24
Train F1: 0.8412, Val F1: 0.1765, Test F1: 0.2301
Epoch 17/20, Train Acc: 0.8400, Val Acc: 0.1837, Test Acc: 0.2632, Test F1(macro): 0.2301, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.8, 0.8, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1, 12, 4, 648, 27]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [1, 11, 2, 103, 7]
psl_acc(PSL 평가에서의 정확도):  0.179 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [1.0, 0.9166666865348816, 0.5, 0.15895061194896698, 0.25925925374031067]
loss for labeled data =>  tensor(0.0412, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(0.3854, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 0:30:02
Train F1: 0.9192, Val F1: 0.1675, Test F1: 0.1894
Epoch 18/20, Train Acc: 0.9200, Val Acc: 0.1735, Test Acc: 0.2421, Test F1(macro): 0.1894, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.8, 0.8, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1, 15, 6, 644, 26]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [1, 14, 4, 103, 8]
psl_acc(PSL 평가에서의 정확도):  0.188 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [1.0, 0.9333333373069763, 0.6666666865348816, 0.15993788838386536, 0.3076923191547394]
loss for labeled data =>  tensor(0.0218, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(0.4368, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 95, Time: 0:31:35
Train F1: 0.9192, Val F1: 0.1680, Test F1: 0.2254
Epoch 19/20, Train Acc: 0.9200, Val Acc: 0.1837, Test Acc: 0.2632, Test F1(macro): 0.2254, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.8, 0.8, 1.0, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1, 16, 8, 644, 27]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [1, 15, 4, 102, 8]
psl_acc(PSL 평가에서의 정확도):  0.187 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [1.0, 0.9375, 0.5, 0.15838509798049927, 0.29629629850387573]
loss for labeled data =>  tensor(0.0222, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(0.3342, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 0:33:10
Train F1: 0.9192, Val F1: 0.1589, Test F1: 0.2211
Epoch 20/20, Train Acc: 0.9200, Val Acc: 0.1735, Test Acc: 0.2526, Test F1(macro): 0.2211, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25


Training complete!
Total training took 0:33:10 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['unixcoder', 'unixcoder']_[1e-05, 2e-06]_0.7_jointmatch_20_[42]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['unixcoder', 'unixcoder']_[1e-05, 2e-06]_0.7_jointmatch_20_[42]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/unixcoder/joint_match//5_['unixcoder', 'unixcoder']_[1e-05, 2e-06]_0.7_jointmatch_20_[42]_{'corcode'}/training_statistics.csv


Best_step:  10 
Best_val_epoch:  2 
best_val_acc:  0.5102040816326531 
best_val_test_acc:  0.42105263157894735 
best_val_test_f1:  0.24546850998463904
Save best record in:  ./experiment/jointmatch/log/unixcoder/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
