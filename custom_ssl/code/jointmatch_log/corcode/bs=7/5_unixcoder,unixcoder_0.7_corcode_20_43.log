current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code
#####이부분 다시 돌려야함 bs가 5로됨
bs for corcod =>  5
Data set -> jointmatch
save_name: 5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[43]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base']
**tokenizer type =  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base'] 

n_labeled_per_class:  5
train_df samples: 739
train_labeled_df samples: 25
train_unlabeled_df samples: 714
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 116), (2, 39), (3, 301), (4, 109), (5, 149)])
n_classes:  5

net_arch:  microsoft/unixcoder-base 
lr:  0.0004 
lr_linear:  0.001 


net_arch:  microsoft/uacc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6747, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5155, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 5, Time: 0:02:26
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 1/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [691, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [112, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.162 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.1620839387178421, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6366, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6784, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 10, Time: 0:04:13
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 2/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 694, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 296, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.427 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.4265129566192627, nan, nan]
loss for labeled data =>  tensor(1.7792, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.8260, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 15, Time: 0:06:23
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 3/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 702, 1, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 37, 1, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.054 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.052706554532051086, 1.0, nan, nan]
loss for labeled data =>  tensor(3.3833, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.3560, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 20, Time: 0:08:06
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 4/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 629]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 127]
psl_acc(PSL 평가에서의 정확도):  0.202 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.20190778374671936]
loss for labeled data =>  tensor(2.0718, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(4.7134, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 25, Time: 0:09:43
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 5/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 638, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 97, 0]
psl_acc(PSL 평가에서의 정확도):  0.152 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.1520376205444336, nan]
loss for labeled data =>  tensor(2.7618, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.8014, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:11:30
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 6/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [621, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [103, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.166 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.16586151719093323, nan, nan, nan, nan]
loss for labeled data =>  tensor(3.8368, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.5890, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 35, Time: 0:13:17
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 7/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(3.4912, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.5448, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 0:15:02
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 8/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.0573, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.2313, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 45, Time: 0:16:42
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 9/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7650, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8005, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 0:18:28
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 10/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.4954, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7448, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 55, Time: 0:20:13
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 11/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 2, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.0 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.0, nan, nan, nan]
loss for labeled data =>  tensor(2.3839, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5642, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 0:21:59
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 12/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 341]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 72]
psl_acc(PSL 평가에서의 정확도):  0.211 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.21114370226860046]
loss for labeled data =>  tensor(2.2264, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8588, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 65, Time: 0:23:45
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 13/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 550, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 85, 0]
psl_acc(PSL 평가에서의 정확도):  0.155 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.15454545617103577, nan]
loss for labeled data =>  tensor(4.2547, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.8007, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 0:25:28
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 14/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(3.9863, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.5261, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 75, Time: 0:27:14
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 15/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [652, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [105, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.161 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.1610429435968399, nan, nan, nan, nan]
loss for labeled data =>  tensor(4.5292, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.8854, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 0:29:02
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 16/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.0952, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.3736, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 85, Time: 0:30:47
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 17/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 676]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 144]
psl_acc(PSL 평가에서의 정확도):  0.213 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.21301774680614471]
loss for labeled data =>  tensor(2.5419, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.0672, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 0:32:29
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 18/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 660]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 130]
psl_acc(PSL 평가에서의 정확도):  0.197 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.19696970283985138]
loss for labeled data =>  tensor(2.2328, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(4.6192, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 95, Time: 0:34:15
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 19/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 674]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 139]
psl_acc(PSL 평가에서의 정확도):  0.206 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.20623145997524261]
loss for labeled data =>  tensor(2.6049, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(5.1643, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 0:36:02
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 20/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25


Training complete!
Total training took 0:36:02 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[43]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[43]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/unixcoder/joint_match//5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[43]_{'corcode'}/training_statistics.csv


Best_step:  15 
Best_val_epoch:  3 
best_val_acc:  0.4489795918367347 
best_val_test_acc:  0.35789473684210527 
best_val_test_f1:  0.1054263565891473
Save best record in:  ./experiment/jointmatch/log/unixcoder/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
