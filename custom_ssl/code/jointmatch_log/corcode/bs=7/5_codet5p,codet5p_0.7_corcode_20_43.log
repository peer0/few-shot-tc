current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs for corcod =>  7
Data set -> jointmatch
save_name: 5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[43]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding']
**tokenizer type =  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding'] 

n_labeled_per_class:  5
train_df samples: 739
train_labeled_df samples: 25
train_unlabeled_df samples: 714
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 116), (2, 39), (3, 301), (4, 109), (5, 149)])
n_classes:  5

net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.0003 
lr_linear:  0.001 


net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.00025 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8287, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7170, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 3, Time: 0:02:03
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 1/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.333, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4051, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7709, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 6, Time: 0:03:43
Train F1: 0.1550, Val F1: 0.1526, Test F1: 0.1435
Epoch 2/20, Train Acc: 0.2667, Val Acc: 0.4082, Test Acc: 0.3263, Test F1(macro): 0.1435, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6629, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8660, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 9, Time: 0:05:23
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 3/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9334, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9548, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 12, Time: 0:07:04
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 4/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6878, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6345, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 15, Time: 0:08:40
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 5/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.333, 0.667, 0.667, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6660, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7001, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 18, Time: 0:10:20
Train F1: 0.2827, Val F1: 0.2394, Test F1: 0.2699
Epoch 6/20, Train Acc: 0.3333, Val Acc: 0.3571, Test Acc: 0.3053, Test F1(macro): 0.2699, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5325, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3805, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 21, Time: 0:12:00
Train F1: 0.2571, Val F1: 0.0929, Test F1: 0.1177
Epoch 7/20, Train Acc: 0.4000, Val Acc: 0.1327, Test Acc: 0.1579, Test F1(macro): 0.1177, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.667]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6321, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6469, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 24, Time: 0:13:40
Train F1: 0.2330, Val F1: 0.1060, Test F1: 0.1125
Epoch 8/20, Train Acc: 0.3333, Val Acc: 0.1837, Test Acc: 0.1684, Test F1(macro): 0.1125, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.333, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6412, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3935, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 27, Time: 0:15:16
Train F1: 0.1706, Val F1: 0.1714, Test F1: 0.1119
Epoch 9/20, Train Acc: 0.2667, Val Acc: 0.1327, Test Acc: 0.1368, Test F1(macro): 0.1119, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.667, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4849, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4613, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:16:39
Train F1: 0.2350, Val F1: 0.2014, Test F1: 0.1425
Epoch 10/20, Train Acc: 0.3333, Val Acc: 0.2755, Test Acc: 0.2421, Test F1(macro): 0.1425, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.667, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2698, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2968, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 33, Time: 0:18:20
Train F1: 0.2350, Val F1: 0.2014, Test F1: 0.1597
Epoch 11/20, Train Acc: 0.3333, Val Acc: 0.2755, Test Acc: 0.2316, Test F1(macro): 0.1597, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5245, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4106, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 36, Time: 0:20:00
Train F1: 0.2800, Val F1: 0.1592, Test F1: 0.1355
Epoch 12/20, Train Acc: 0.4000, Val Acc: 0.1327, Test Acc: 0.1474, Test F1(macro): 0.1355, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3385, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2372, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 39, Time: 0:21:39
Train F1: 0.2800, Val F1: 0.1319, Test F1: 0.1355
Epoch 13/20, Train Acc: 0.4000, Val Acc: 0.1327, Test Acc: 0.1474, Test F1(macro): 0.1355, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.667, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6939, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6901, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 42, Time: 0:23:19
Train F1: 0.2133, Val F1: 0.1257, Test F1: 0.1355
Epoch 14/20, Train Acc: 0.3333, Val Acc: 0.1327, Test Acc: 0.1474, Test F1(macro): 0.1355, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.667, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(0.9253, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(0.9425, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 45, Time: 0:24:57
Train F1: 0.2000, Val F1: 0.0980, Test F1: 0.1177
Epoch 15/20, Train Acc: 0.3333, Val Acc: 0.1327, Test Acc: 0.1579, Test F1(macro): 0.1177, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.667, 0.0, 0.333, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4667, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5157, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 48, Time: 0:26:36
Train F1: 0.1308, Val F1: 0.1031, Test F1: 0.1183
Epoch 16/20, Train Acc: 0.2000, Val Acc: 0.1735, Test Acc: 0.2211, Test F1(macro): 0.1183, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.667, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2587, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3240, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 51, Time: 0:28:17
Train F1: 0.1927, Val F1: 0.0968, Test F1: 0.1124
Epoch 17/20, Train Acc: 0.3333, Val Acc: 0.1633, Test Acc: 0.2105, Test F1(macro): 0.1124, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7899, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8008, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 54, Time: 0:29:57
Train F1: 0.2571, Val F1: 0.1719, Test F1: 0.1425
Epoch 18/20, Train Acc: 0.4000, Val Acc: 0.1735, Test Acc: 0.2421, Test F1(macro): 0.1425, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.667, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3260, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2810, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 57, Time: 0:31:32
Train F1: 0.2133, Val F1: 0.1260, Test F1: 0.1694
Epoch 19/20, Train Acc: 0.3333, Val Acc: 0.1735, Test Acc: 0.2526, Test F1(macro): 0.1694, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.667, 0.0, 0.667, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5443, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5251, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 0:33:12
Train F1: 0.4057, Val F1: 0.1617, Test F1: 0.1290
Epoch 20/20, Train Acc: 0.4667, Val Acc: 0.1327, Test Acc: 0.1474, Test F1(macro): 0.1290, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25


Training complete!
Total training took 0:33:12 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[43]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[43]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/codet5p/joint_match//5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[43]_{'corcode'}/training_statistics.csv


Best_step:  3 
Best_val_epoch:  1 
best_val_acc:  0.4489795918367347 
best_val_test_acc:  0.35789473684210527 
best_val_test_f1:  0.1054263565891473
Save best record in:  ./experiment/jointmatch/log/codet5p/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
