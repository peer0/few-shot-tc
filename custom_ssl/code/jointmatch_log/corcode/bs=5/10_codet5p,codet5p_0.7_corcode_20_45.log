current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs for corcod =>  5
Data set -> jointmatch
save_name: 10_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[45]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding']
**tokenizer type =  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding'] 

n_labeled_per_class:  10
train_df samples: 739
train_labeled_df samples: 50
train_unlabeled_df samples: 689
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 10), (2, 10), (3, 10), (4, 10), (5, 10)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 111), (2, 34), (3, 296), (4, 104), (5, 144)])
n_classes:  5

net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.0003 
lr_linear:  0.001 


net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.00025 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [0.4, 1.0, 0.3, 0.0, 0.3]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5654, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4680, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 10, Time: 0:01:50
Train F1: 0.3596, Val F1: 0.1457, Test F1: 0.1424
Epoch 1/20, Train Acc: 0.4000, Val Acc: 0.1633, Test Acc: 0.1579, Test F1(macro): 0.1424, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.5, 1.0, 0.0, 0.5, 0.1]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3918, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3838, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 20, Time: 0:03:54
Train F1: 0.3624, Val F1: 0.1328, Test F1: 0.1920
Epoch 2/20, Train Acc: 0.4200, Val Acc: 0.1735, Test Acc: 0.1895, Test F1(macro): 0.1920, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.7, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4094, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2643, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 30, Time: 0:05:58
Train F1: 0.2325, Val F1: 0.1828, Test F1: 0.2272
Epoch 3/20, Train Acc: 0.3400, Val Acc: 0.2755, Test Acc: 0.2632, Test F1(macro): 0.2272, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.9, 0.1, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3604, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4659, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 0:07:43
Train F1: 0.2911, Val F1: 0.1828, Test F1: 0.2272
Epoch 4/20, Train Acc: 0.4000, Val Acc: 0.2755, Test Acc: 0.2632, Test F1(macro): 0.2272, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.1]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3360, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4845, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 50, Time: 0:09:45
Train F1: 0.1042, Val F1: 0.1565, Test F1: 0.1368
Epoch 5/20, Train Acc: 0.2200, Val Acc: 0.4694, Test Acc: 0.3684, Test F1(macro): 0.1368, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6263, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3682, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 0:11:31
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 6/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6110, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3496, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 0:13:13
Train F1: 0.0667, Val F1: 0.1248, Test F1: 0.1054
Epoch 7/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.1, 0.0, 0.3, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6143, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5838, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 0:14:57
Train F1: 0.1570, Val F1: 0.1908, Test F1: 0.1254
Epoch 8/20, Train Acc: 0.2400, Val Acc: 0.2653, Test Acc: 0.2526, Test F1(macro): 0.1254, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.3, 0.0, 0.0, 0.7]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6047, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2501, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 0:16:41
Train F1: 0.1182, Val F1: 0.0861, Test F1: 0.1148
Epoch 9/20, Train Acc: 0.2000, Val Acc: 0.1633, Test Acc: 0.2000, Test F1(macro): 0.1148, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.6, 0.4, 0.0, 0.0, 0.9]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5769, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3937, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 0:18:27
Train F1: 0.2981, Val F1: 0.1425, Test F1: 0.1638
Epoch 10/20, Train Acc: 0.3800, Val Acc: 0.2551, Test Acc: 0.2842, Test F1(macro): 0.1638, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.8, 0.0, 0.0, 0.0, 0.9]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3549, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1573, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 110, Time: 0:20:12
Train F1: 0.1967, Val F1: 0.1474, Test F1: 0.1562
Epoch 11/20, Train Acc: 0.3400, Val Acc: 0.2551, Test Acc: 0.2737, Test F1(macro): 0.1562, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.5, 0.7, 0.0, 0.0, 0.2]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3171, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.0964, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 120, Time: 0:21:53
Train F1: 0.2033, Val F1: 0.1649, Test F1: 0.1568
Epoch 12/20, Train Acc: 0.2800, Val Acc: 0.1837, Test Acc: 0.1684, Test F1(macro): 0.1568, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.8, 0.0, 0.0, 0.7]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2910, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1006, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 130, Time: 0:23:38
Train F1: 0.1746, Val F1: 0.0866, Test F1: 0.1089
Epoch 13/20, Train Acc: 0.3000, Val Acc: 0.1531, Test Acc: 0.1684, Test F1(macro): 0.1089, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.6, 0.1, 0.0, 0.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7302, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1587, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 140, Time: 0:25:23
Train F1: 0.1984, Val F1: 0.1151, Test F1: 0.1635
Epoch 14/20, Train Acc: 0.3000, Val Acc: 0.1939, Test Acc: 0.2737, Test F1(macro): 0.1635, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.7, 0.7, 0.0, 0.0, 0.6]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7021, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.1841, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 150, Time: 0:27:08
Train F1: 0.3327, Val F1: 0.1625, Test F1: 0.2082
Epoch 15/20, Train Acc: 0.4000, Val Acc: 0.1939, Test Acc: 0.2421, Test F1(macro): 0.2082, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.7, 0.8, 0.0, 0.0, 0.3]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6805, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.0683, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 160, Time: 0:28:52
Train F1: 0.2791, Val F1: 0.1116, Test F1: 0.1650
Epoch 16/20, Train Acc: 0.3600, Val Acc: 0.1429, Test Acc: 0.2000, Test F1(macro): 0.1650, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.1, 0.8, 0.0, 0.4, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3215, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(0.9859, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 170, Time: 0:30:24
Train F1: 0.3934, Val F1: 0.2048, Test F1: 0.2492
Epoch 17/20, Train Acc: 0.4600, Val Acc: 0.1735, Test Acc: 0.2105, Test F1(macro): 0.2492, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.6, 1.0, 0.1, 0.0, 0.3]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2792, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(0.9650, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 180, Time: 0:32:10
Train F1: 0.3099, Val F1: 0.1224, Test F1: 0.1541
Epoch 18/20, Train Acc: 0.4000, Val Acc: 0.1429, Test Acc: 0.1789, Test F1(macro): 0.1541, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.6, 0.9, 0.0, 0.0, 0.7]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2503, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(0.9334, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 190, Time: 0:33:55
Train F1: 0.3332, Val F1: 0.1446, Test F1: 0.1642
Epoch 19/20, Train Acc: 0.4400, Val Acc: 0.1735, Test Acc: 0.1895, Test F1(macro): 0.1642, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.6, 0.9, 0.0, 0.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2280, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(0.9185, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 200, Time: 0:35:41
Train F1: 0.3500, Val F1: 0.1556, Test F1: 0.1787
Epoch 20/20, Train Acc: 0.4600, Val Acc: 0.1837, Test Acc: 0.2105, Test F1(macro): 0.1787, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50


Training complete!
Total training took 0:35:41 (h:mm:ss)
Load model from ./experiment/jointmatch/output/10_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[45]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/10_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[45]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/codet5p/joint_match//10_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[45]_{'corcode'}/training_statistics.csv


Best_step:  50 
Best_val_epoch:  5 
best_val_acc:  0.46938775510204084 
best_val_test_acc:  0.3684210526315789 
best_val_test_f1:  0.13676190476190478
Save best record in:  ./experiment/jointmatch/log/codet5p/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
