current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs for corcod =>  5
Data set -> jointmatch
save_name: 5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[43]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding']
**tokenizer type =  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding'] 

n_labeled_per_class:  5
train_df samples: 739
train_labeled_df samples: 25
train_unlabeled_df samples: 714
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 116), (2, 39), (3, 301), (4, 109), (5, 149)])
n_classes:  5

net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.0003 
lr_linear:  0.001 


net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.00025 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [0.2, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5647, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5687, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 5, Time: 0:01:49
Train F1: 0.1286, Val F1: 0.0597, Test F1: 0.0165
Epoch 1/20, Train Acc: 0.2400, Val Acc: 0.0714, Test Acc: 0.0421, Test F1(macro): 0.0165, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5781, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3919, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 10, Time: 0:03:48
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 2/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5457, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4636, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 15, Time: 0:05:40
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 3/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.8, 0.8, 0.0, 0.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6142, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6326, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 20, Time: 0:07:43
Train F1: 0.4140, Val F1: 0.2086, Test F1: 0.1726
Epoch 4/20, Train Acc: 0.4800, Val Acc: 0.1531, Test Acc: 0.1158, Test F1(macro): 0.1726, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.2, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5868, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5503, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 25, Time: 0:09:43
Train F1: 0.1381, Val F1: 0.1239, Test F1: 0.1054
Epoch 5/20, Train Acc: 0.2400, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4238, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4428, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:11:06
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 6/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6648, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6604, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 35, Time: 0:12:47
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 7/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4504, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6237, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 0:14:31
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 8/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4224, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5951, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 45, Time: 0:16:16
Train F1: 0.2547, Val F1: 0.1116, Test F1: 0.1600
Epoch 9/20, Train Acc: 0.3600, Val Acc: 0.1224, Test Acc: 0.1474, Test F1(macro): 0.1600, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.8, 0.8, 0.8, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6562, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4671, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 0:17:59
Train F1: 0.3822, Val F1: 0.1571, Test F1: 0.2126
Epoch 10/20, Train Acc: 0.4800, Val Acc: 0.3265, Test Acc: 0.3684, Test F1(macro): 0.2126, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.6, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3728, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4189, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 55, Time: 0:19:41
Train F1: 0.1924, Val F1: 0.0488, Test F1: 0.0662
Epoch 11/20, Train Acc: 0.3200, Val Acc: 0.0714, Test Acc: 0.0947, Test F1(macro): 0.0662, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.2, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3693, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3328, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 0:21:25
Train F1: 0.1544, Val F1: 0.0926, Test F1: 0.0939
Epoch 12/20, Train Acc: 0.2400, Val Acc: 0.1020, Test Acc: 0.1053, Test F1(macro): 0.0939, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4299, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2380, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 65, Time: 0:23:10
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 13/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3452, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4749, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 0:24:54
Train F1: 0.2288, Val F1: 0.0841, Test F1: 0.0964
Epoch 14/20, Train Acc: 0.3600, Val Acc: 0.1327, Test Acc: 0.1579, Test F1(macro): 0.0964, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.6, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3386, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6249, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 75, Time: 0:26:38
Train F1: 0.1817, Val F1: 0.0928, Test F1: 0.0991
Epoch 15/20, Train Acc: 0.3200, Val Acc: 0.1531, Test Acc: 0.1789, Test F1(macro): 0.0991, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.4, 1.0, 0.0, 0.0, 0.2]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3144, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5758, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 0:28:20
Train F1: 0.2178, Val F1: 0.1042, Test F1: 0.1067
Epoch 16/20, Train Acc: 0.3200, Val Acc: 0.1327, Test Acc: 0.1368, Test F1(macro): 0.1067, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.6, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3107, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6303, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 85, Time: 0:30:05
Train F1: 0.1882, Val F1: 0.1079, Test F1: 0.1162
Epoch 17/20, Train Acc: 0.3200, Val Acc: 0.2449, Test Acc: 0.2421, Test F1(macro): 0.1162, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2883, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4189, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 0:31:49
Train F1: 0.0769, Val F1: 0.0250, Test F1: 0.0341
Epoch 18/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0632, Test F1(macro): 0.0341, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.8, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2753, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3413, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 95, Time: 0:33:33
Train F1: 0.2400, Val F1: 0.1171, Test F1: 0.1309
Epoch 19/20, Train Acc: 0.3600, Val Acc: 0.1735, Test Acc: 0.2526, Test F1(macro): 0.1309, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2852, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3122, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 0:35:14
Train F1: 0.0741, Val F1: 0.0322, Test F1: 0.0202
Epoch 20/20, Train Acc: 0.2000, Val Acc: 0.0714, Test Acc: 0.0526, Test F1(macro): 0.0202, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25


Training complete!
Total training took 0:35:14 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[43]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[43]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/codet5p/joint_match//5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[43]_{'corcode'}/training_statistics.csv


Best_step:  25 
Best_val_epoch:  5 
best_val_acc:  0.4489795918367347 
best_val_test_acc:  0.35789473684210527 
best_val_test_f1:  0.1054263565891473
Save best record in:  ./experiment/jointmatch/log/codet5p/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
