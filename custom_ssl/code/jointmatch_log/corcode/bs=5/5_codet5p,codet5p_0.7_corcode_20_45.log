current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs for corcod =>  5
Data set -> jointmatch
save_name: 5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[45]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding']
**tokenizer type =  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding'] 

n_labeled_per_class:  5
train_df samples: 739
train_labeled_df samples: 25
train_unlabeled_df samples: 714
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 116), (2, 39), (3, 301), (4, 109), (5, 149)])
n_classes:  5

net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.0003 
lr_linear:  0.001 


net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.00025 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [0.0, 0.6, 0.4, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5882, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5896, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 5, Time: 0:01:47
Train F1: 0.3333, Val F1: 0.2242, Test F1: 0.1220
Epoch 1/20, Train Acc: 0.4000, Val Acc: 0.3163, Test Acc: 0.2000, Test F1(macro): 0.1220, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5574, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4718, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 10, Time: 0:03:33
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 2/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5784, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4166, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 15, Time: 0:05:18
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 3/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.2, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5589, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5347, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 20, Time: 0:07:39
Train F1: 0.1200, Val F1: 0.1440, Test F1: 0.1065
Epoch 4/20, Train Acc: 0.2400, Val Acc: 0.4388, Test Acc: 0.3474, Test F1(macro): 0.1065, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4248, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6256, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 25, Time: 0:09:23
Train F1: 0.2448, Val F1: 0.1007, Test F1: 0.1266
Epoch 5/20, Train Acc: 0.4000, Val Acc: 0.1327, Test Acc: 0.2105, Test F1(macro): 0.1266, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3953, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6116, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:11:07
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 6/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.6]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6482, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6458, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 35, Time: 0:12:52
Train F1: 0.1817, Val F1: 0.1419, Test F1: 0.1393
Epoch 7/20, Train Acc: 0.3200, Val Acc: 0.2449, Test Acc: 0.2421, Test F1(macro): 0.1393, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5968, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6504, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 0:14:33
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 8/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.8, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6441, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6527, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 45, Time: 0:16:17
Train F1: 0.2067, Val F1: 0.0529, Test F1: 0.0425
Epoch 9/20, Train Acc: 0.3600, Val Acc: 0.0816, Test Acc: 0.0737, Test F1(macro): 0.0425, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.8, 0.2, 0.6, 0.2]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5470, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6216, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 0:18:02
Train F1: 0.3141, Val F1: 0.1263, Test F1: 0.0845
Epoch 10/20, Train Acc: 0.3600, Val Acc: 0.1327, Test Acc: 0.0947, Test F1(macro): 0.0845, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6836, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6074, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 55, Time: 0:20:05
Train F1: 0.0690, Val F1: 0.1248, Test F1: 0.1031
Epoch 11/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3474, Test F1(macro): 0.1031, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.2, 0.0, 0.2, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5364, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6012, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 0:21:48
Train F1: 0.1927, Val F1: 0.1399, Test F1: 0.1339
Epoch 12/20, Train Acc: 0.2800, Val Acc: 0.2551, Test Acc: 0.2632, Test F1(macro): 0.1339, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.6, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3813, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5882, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 65, Time: 0:23:30
Train F1: 0.1924, Val F1: 0.0430, Test F1: 0.0648
Epoch 13/20, Train Acc: 0.3200, Val Acc: 0.1020, Test Acc: 0.1158, Test F1(macro): 0.0648, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3769, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6977, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 0:25:14
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0724
Epoch 14/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2211, Test F1(macro): 0.0724, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.2]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3323, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6251, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 75, Time: 0:26:59
Train F1: 0.1341, Val F1: 0.0381, Test F1: 0.0431
Epoch 15/20, Train Acc: 0.2400, Val Acc: 0.1020, Test Acc: 0.1158, Test F1(macro): 0.0431, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.8, 0.0, 0.8, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7349, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6016, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 0:28:44
Train F1: 0.1842, Val F1: 0.0886, Test F1: 0.1232
Epoch 16/20, Train Acc: 0.3200, Val Acc: 0.1429, Test Acc: 0.2105, Test F1(macro): 0.1232, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.2, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3996, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5010, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 85, Time: 0:30:12
Train F1: 0.1200, Val F1: 0.0910, Test F1: 0.0233
Epoch 17/20, Train Acc: 0.2400, Val Acc: 0.1020, Test Acc: 0.0526, Test F1(macro): 0.0233, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.4, 0.6, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7391, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3324, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 0:31:56
Train F1: 0.2949, Val F1: 0.1854, Test F1: 0.1981
Epoch 18/20, Train Acc: 0.4000, Val Acc: 0.3061, Test Acc: 0.2842, Test F1(macro): 0.1981, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4292, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2894, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 95, Time: 0:33:40
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 19/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.4, 0.8, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4579, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2725, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 0:35:26
Train F1: 0.1467, Val F1: 0.1693, Test F1: 0.1818
Epoch 20/20, Train Acc: 0.2400, Val Acc: 0.3980, Test Acc: 0.3684, Test F1(macro): 0.1818, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25


Training complete!
Total training took 0:35:26 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[45]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[45]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/codet5p/joint_match//5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[45]_{'corcode'}/training_statistics.csv


Best_step:  55 
Best_val_epoch:  11 
best_val_acc:  0.4489795918367347 
best_val_test_acc:  0.3473684210526316 
best_val_test_f1:  0.103125
Save best record in:  ./experiment/jointmatch/log/codet5p/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
