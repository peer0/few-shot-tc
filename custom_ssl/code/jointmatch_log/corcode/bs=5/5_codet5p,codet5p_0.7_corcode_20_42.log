current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs for corcod =>  5
Data set -> jointmatch
save_name: 5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[42]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding']
**tokenizer type =  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding'] 

n_labeled_per_class:  5
train_df samples: 739
train_labeled_df samples: 25
train_unlabeled_df samples: 714
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 116), (2, 39), (3, 301), (4, 109), (5, 149)])
n_classes:  5

net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.0003 
lr_linear:  0.001 


net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.00025 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [1.0, 0.6, 0.0, 0.0, 0.6]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5675, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5836, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 5, Time: 0:02:02
Train F1: 0.3609, Val F1: 0.1924, Test F1: 0.1952
Epoch 1/20, Train Acc: 0.4400, Val Acc: 0.2245, Test Acc: 0.2421, Test F1(macro): 0.1952, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.8, 0.6, 0.6, 1.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3071, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4829, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 10, Time: 0:04:12
Train F1: 0.7983, Val F1: 0.4602, Test F1: 0.3080
Epoch 2/20, Train Acc: 0.8000, Val Acc: 0.4082, Test Acc: 0.3158, Test F1(macro): 0.3080, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.4, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3208, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2497, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 15, Time: 0:05:57
Train F1: 0.1561, Val F1: 0.0821, Test F1: 0.0772
Epoch 3/20, Train Acc: 0.2800, Val Acc: 0.1531, Test Acc: 0.2316, Test F1(macro): 0.0772, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.6, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6576, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4464, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 20, Time: 0:07:38
Train F1: 0.2103, Val F1: 0.1260, Test F1: 0.1800
Epoch 4/20, Train Acc: 0.3200, Val Acc: 0.1633, Test Acc: 0.2632, Test F1(macro): 0.1800, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6440, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6716, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 25, Time: 0:09:23
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 5/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.2, 0.0, 0.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6050, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6063, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:11:06
Train F1: 0.1238, Val F1: 0.0787, Test F1: 0.0696
Epoch 6/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2105, Test F1(macro): 0.0696, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3962, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5848, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 35, Time: 0:12:51
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 7/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6502, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6027, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 0:14:36
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 8/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6250, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6090, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 45, Time: 0:16:32
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 9/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.6, 0.0, 0.0, 1.0, 0.2]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6215, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4868, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 0:18:17
Train F1: 0.2700, Val F1: 0.1697, Test F1: 0.1239
Epoch 10/20, Train Acc: 0.3600, Val Acc: 0.2041, Test Acc: 0.2316, Test F1(macro): 0.1239, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5344, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6384, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 55, Time: 0:20:02
Train F1: 0.2266, Val F1: 0.1880, Test F1: 0.1431
Epoch 11/20, Train Acc: 0.3600, Val Acc: 0.3061, Test Acc: 0.2632, Test F1(macro): 0.1431, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6514, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3644, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 0:21:45
Train F1: 0.0690, Val F1: 0.0377, Test F1: 0.0462
Epoch 12/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0462, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.6, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5052, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5480, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 65, Time: 0:23:19
Train F1: 0.2241, Val F1: 0.1377, Test F1: 0.1119
Epoch 13/20, Train Acc: 0.3200, Val Acc: 0.1224, Test Acc: 0.1368, Test F1(macro): 0.1119, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3944, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6549, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 0:24:57
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 14/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6541, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5411, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 75, Time: 0:26:42
Train F1: 0.2536, Val F1: 0.1697, Test F1: 0.0892
Epoch 15/20, Train Acc: 0.4000, Val Acc: 0.2041, Test Acc: 0.2105, Test F1(macro): 0.0892, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5615, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6721, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 0:28:27
Train F1: 0.2576, Val F1: 0.1697, Test F1: 0.0913
Epoch 16/20, Train Acc: 0.4000, Val Acc: 0.2041, Test Acc: 0.2105, Test F1(macro): 0.0913, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3828, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6769, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 85, Time: 0:30:12
Train F1: 0.2394, Val F1: 0.2019, Test F1: 0.0974
Epoch 17/20, Train Acc: 0.3600, Val Acc: 0.3061, Test Acc: 0.2316, Test F1(macro): 0.0974, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.8, 1.0, 0.0, 0.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4823, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6797, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 0:31:53
Train F1: 0.4205, Val F1: 0.2524, Test F1: 0.2175
Epoch 18/20, Train Acc: 0.5200, Val Acc: 0.2857, Test Acc: 0.2632, Test F1(macro): 0.2175, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.2]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3458, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3373, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 95, Time: 0:33:38
Train F1: 0.1286, Val F1: 0.0663, Test F1: 0.0909
Epoch 19/20, Train Acc: 0.2400, Val Acc: 0.1224, Test Acc: 0.1579, Test F1(macro): 0.0909, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.2]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.2905, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5539, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 0:35:23
Train F1: 0.1200, Val F1: 0.1437, Test F1: 0.1321
Epoch 20/20, Train Acc: 0.2400, Val Acc: 0.2347, Test Acc: 0.2211, Test F1(macro): 0.1321, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25


Training complete!
Total training took 0:35:23 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[42]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[42]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/codet5p/joint_match//5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[42]_{'corcode'}/training_statistics.csv


Best_step:  45 
Best_val_epoch:  9 
best_val_acc:  0.4489795918367347 
best_val_test_acc:  0.35789473684210527 
best_val_test_f1:  0.1054263565891473
Save best record in:  ./experiment/jointmatch/log/codet5p/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
