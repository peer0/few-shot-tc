current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs for corcod =>  5
Data set -> jointmatch
save_name: 5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[45]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base']
**tokenizer type =  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base'] 

n_labeled_per_class:  5
train_df samples: 739
train_labeled_df samples: 25
train_unlabeled_df samples: 714
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 116), (2, 39), (3, 301), (4, 109), (5, 149)])
n_classes:  5

net_arch:  microsoft/unixcoder-base 
lr:  0.0004 
lr_linear:  0.001 


net_arch:  microsoft/unixcoder-base 
lr:  0.0002 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7803, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5241, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 5, Time: 0:01:50
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 1/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 640]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 130]
psl_acc(PSL 평가에서의 정확도):  0.203 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.203125]
loss for labeled data =>  tensor(1.7869, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8896, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 10, Time: 0:03:33
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 2/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 626, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 264, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.422 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.42172524333000183, nan, nan]
loss for labeled data =>  tensor(2.9133, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.0103, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 15, Time: 0:05:19
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 3/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1, 0, 593, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 244, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.411 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.0, nan, 0.4114671051502228, nan, nan]
loss for labeled data =>  tensor(4.8790, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9482, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 20, Time: 0:07:06
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 4/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.0255, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.4602, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 25, Time: 0:08:51
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 5/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 663]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 141]
psl_acc(PSL 평가에서의 정확도):  0.213 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.21266968548297882]
loss for labeled data =>  tensor(1.7488, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.3945, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:10:35
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 6/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.0503, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.5919, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 35, Time: 0:12:03
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 7/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 698, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 293, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.42 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.4197707772254944, nan, nan]
loss for labeled data =>  tensor(3.4922, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.1445, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 0:13:50
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 8/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 679]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 144]
psl_acc(PSL 평가에서의 정확도):  0.212 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.2120765894651413]
loss for labeled data =>  tensor(2.5940, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.3207, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 45, Time: 0:15:36
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 9/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.4692, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9996, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 0:17:20
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 10/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 616]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 128]
psl_acc(PSL 평가에서의 정확도):  0.208 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.20779220759868622]
loss for labeled data =>  tensor(1.7994, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5593, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 55, Time: 0:19:03
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 11/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [493, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [81, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.164 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.16430020332336426, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.2503, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.6545, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 0:20:35
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 12/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 494, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 24, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.049 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.04858299717307091, nan, nan, nan]
loss for labeled data =>  tensor(4.3609, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.6723, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 65, Time: 0:22:20
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 13/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [659, 0, 22, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [111, 0, 8, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.175 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.16843701899051666, nan, 0.3636363744735718, nan, nan]
loss for labeled data =>  tensor(6.6072, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.2240, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 0:24:08
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 14/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [702, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [114, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.162 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.16239316761493683, nan, nan, nan, nan]
loss for labeled data =>  tensor(11.1540, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.0953, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 75, Time: 0:25:55
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 15/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 621, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 99, 0]
psl_acc(PSL 평가에서의 정확도):  0.159 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.15942029654979706, nan]
loss for labeled data =>  tensor(2.3470, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.7638, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 0:27:36
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 16/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 5, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.0 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.0, nan]
loss for labeled data =>  tensor(3.7769, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.8598, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 85, Time: 0:29:22
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 17/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [623, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [105, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.169 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.16853933036327362, nan, nan, nan, nan]
loss for labeled data =>  tensor(3.8587, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.5218, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 0:31:09
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 18/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.0 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.0, nan, nan, nan, nan]
loss for labeled data =>  tensor(3.1401, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.7664, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 95, Time: 0:32:53
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 19/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7806, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7626, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 0:34:38
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 20/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25


Training complete!
Total training took 0:34:38 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[45]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[45]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/unixcoder/joint_match//5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[45]_{'corcode'}/training_statistics.csv


Best_step:  5 
Best_val_epoch:  1 
best_val_acc:  0.4489795918367347 
best_val_test_acc:  0.35789473684210527 
best_val_test_f1:  0.1054263565891473
Save best record in:  ./experiment/jointmatch/log/unixcoder/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
