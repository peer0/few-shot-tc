current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs for corcod =>  5
Data set -> jointmatch
save_name: 10_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[43]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base']
**tokenizer type =  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base'] 

n_labeled_per_class:  10
train_df samples: 739
train_labeled_df samples: 50
train_unlabeled_df samples: 689
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 10), (2, 10), (3, 10), (4, 10), (5, 10)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 111), (2, 34), (3, 296), (4, 104), (5, 144)])
n_classes:  5

net_arch:  microsoft/unixcoder-base 
lr:  0.0004 
lr_linear:  0.001 


net_arch:  microsoft/unixcoder-base 
lr:  0.0002 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5717, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5891, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 10, Time: 0:01:51
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 1/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 622, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 92, 0]
psl_acc(PSL 평가에서의 정확도):  0.148 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.1479099690914154, nan]
loss for labeled data =>  tensor(1.6287, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9059, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 20, Time: 0:04:03
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 2/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7420, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9539, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:05:31
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 3/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 394, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 179, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.454 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.4543147087097168, nan, nan]
loss for labeled data =>  tensor(1.6812, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6414, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 40, Time: 0:07:39
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 4/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8897, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6280, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 0:09:25
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 5/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 79, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 5, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.063 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.06329113990068436, nan, nan, nan]
loss for labeled data =>  tensor(1.7632, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7155, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 0:11:11
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 6/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 661]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 139]
psl_acc(PSL 평가에서의 정확도):  0.21 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.2102874368429184]
loss for labeled data =>  tensor(1.9721, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6590, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 0:12:56
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 7/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 660, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 32, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.048 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.04848484694957733, nan, nan, nan]
loss for labeled data =>  tensor(2.1721, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5927, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 0:14:42
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 8/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 540, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 233, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.431 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.4314814805984497, nan, nan]
loss for labeled data =>  tensor(2.0321, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6697, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 0:16:30
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 9/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 639]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 135]
psl_acc(PSL 평가에서의 정확도):  0.211 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.2112676054239273]
loss for labeled data =>  tensor(2.0194, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7804, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 0:18:18
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 10/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 179, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 81, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.453 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.4525139629840851, nan, nan]
loss for labeled data =>  tensor(1.9807, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8275, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 110, Time: 0:20:03
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 11/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 648]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 140]
psl_acc(PSL 평가에서의 정확도):  0.216 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.21604938805103302]
loss for labeled data =>  tensor(1.6419, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6583, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 120, Time: 0:21:33
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 12/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6857, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7314, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 130, Time: 0:23:19
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 13/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7223, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7557, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 140, Time: 0:25:04
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 14/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6475, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5457, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 150, Time: 0:26:50
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 15/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [349, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [60, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.172 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.1719197779893875, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6322, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6724, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 160, Time: 0:28:36
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 16/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 664]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 137]
psl_acc(PSL 평가에서의 정확도):  0.206 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.20632530748844147]
loss for labeled data =>  tensor(1.9606, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9515, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 170, Time: 0:30:06
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 17/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 603, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 92, 0]
psl_acc(PSL 평가에서의 정확도):  0.153 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.15257048606872559, nan]
loss for labeled data =>  tensor(2.0059, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7476, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 180, Time: 0:31:53
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 18/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 4]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.0 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.0]
loss for labeled data =>  tensor(1.9200, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.0088, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 190, Time: 0:33:39
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 19/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7576, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.0005, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 200, Time: 0:35:24
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 20/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50


Training complete!
Total training took 0:35:24 (h:mm:ss)
Load model from ./experiment/jointmatch/output/10_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[43]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/10_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[43]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/unixcoder/joint_match//10_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[43]_{'corcode'}/training_statistics.csv


Best_step:  40 
Best_val_epoch:  4 
best_val_acc:  0.4489795918367347 
best_val_test_acc:  0.35789473684210527 
best_val_test_f1:  0.1054263565891473
Save best record in:  ./experiment/jointmatch/log/unixcoder/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
