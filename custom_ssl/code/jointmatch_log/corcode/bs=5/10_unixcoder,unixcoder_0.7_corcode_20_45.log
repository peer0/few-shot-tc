current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs for corcod =>  5
Data set -> jointmatch
save_name: 10_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[45]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base']
**tokenizer type =  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base'] 

n_labeled_per_class:  10
train_df samples: 739
train_labeled_df samples: 50
train_unlabeled_df samples: 689
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 10), (2, 10), (3, 10), (4, 10), (5, 10)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 111), (2, 34), (3, 296), (4, 104), (5, 144)])
n_classes:  5

net_arch:  microsoft/unixcoder-base 
lr:  0.0004 
lr_linear:  0.001 


net_arch:  microsoft/unixcoder-base 
lr:  0.0002 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1, 656, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 33, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.05 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.0, 0.05030487850308418, nan, nan, nan]
loss for labeled data =>  tensor(1.3947, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4035, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 10, Time: 0:01:48
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 1/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 16]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 1]
psl_acc(PSL 평가에서의 정확도):  0.062 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.0625]
loss for labeled data =>  tensor(1.9990, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5946, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 20, Time: 0:03:53
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 2/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 639, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 32, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.05 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.050078246742486954, nan, nan, nan]
loss for labeled data =>  tensor(1.9923, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6768, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:05:40
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 3/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 624]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 135]
psl_acc(PSL 평가에서의 정확도):  0.216 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.2163461595773697]
loss for labeled data =>  tensor(2.0152, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6533, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 0:07:27
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 4/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 353]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 75]
psl_acc(PSL 평가에서의 정확도):  0.212 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.2124645859003067]
loss for labeled data =>  tensor(2.1093, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8680, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 0:09:13
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 5/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 548, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 25, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.046 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.04562043771147728, nan, nan, nan]
loss for labeled data =>  tensor(1.9140, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7623, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 0:10:56
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 6/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.3097, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6742, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 0:12:43
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 7/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 659, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 283, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.429 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.4294385313987732, nan, nan]
loss for labeled data =>  tensor(1.8066, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6593, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 80, Time: 0:14:48
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 8/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 619]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 130]
psl_acc(PSL 평가에서의 정확도):  0.21 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.2100161612033844]
loss for labeled data =>  tensor(2.1262, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.4053, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 0:16:35
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 9/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.1026, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6717, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 0:18:17
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 10/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 617]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 127]
psl_acc(PSL 평가에서의 정확도):  0.206 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.20583468675613403]
loss for labeled data =>  tensor(1.6450, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6177, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 110, Time: 0:20:03
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 11/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 6, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 1, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.167 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.1666666716337204, nan, nan, nan]
loss for labeled data =>  tensor(1.9707, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5898, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 120, Time: 0:21:49
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 12/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7237, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6622, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 130, Time: 0:23:35
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 13/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7034, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6407, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 140, Time: 0:25:18
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 14/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [592, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [98, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.166 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.16554054617881775, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7162, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6800, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 150, Time: 0:27:05
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 15/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.4252, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6877, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 160, Time: 0:28:51
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 16/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [608, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [93, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.153 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.15296052396297455, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.4241, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6147, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 170, Time: 0:30:38
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 17/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 645]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 135]
psl_acc(PSL 평가에서의 정확도):  0.209 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.20930232107639313]
loss for labeled data =>  tensor(2.3042, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6613, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 180, Time: 0:32:25
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 18/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [633, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [102, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.161 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.1611374467611313, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.3597, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7393, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 190, Time: 0:34:07
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 19/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 588]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 117]
psl_acc(PSL 평가에서의 정확도):  0.199 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.19897958636283875]
loss for labeled data =>  tensor(2.6184, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5957, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 200, Time: 0:35:54
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 20/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 50


Training complete!
Total training took 0:35:54 (h:mm:ss)
Load model from ./experiment/jointmatch/output/10_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[45]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/10_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[45]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/unixcoder/joint_match//10_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[45]_{'corcode'}/training_statistics.csv


Best_step:  80 
Best_val_epoch:  8 
best_val_acc:  0.4489795918367347 
best_val_test_acc:  0.35789473684210527 
best_val_test_f1:  0.1054263565891473
Save best record in:  ./experiment/jointmatch/log/unixcoder/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
