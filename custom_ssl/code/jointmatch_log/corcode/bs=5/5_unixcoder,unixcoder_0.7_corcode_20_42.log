current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs for corcod =>  5
Data set -> jointmatch
save_name: 5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[42]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base']
**tokenizer type =  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base'] 

n_labeled_per_class:  5
train_df samples: 739
train_labeled_df samples: 25
train_unlabeled_df samples: 714
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 116), (2, 39), (3, 301), (4, 109), (5, 149)])
n_classes:  5

net_arch:  microsoft/unixcoder-base 
lr:  0.0004 
lr_linear:  0.001 


net_arch:  microsoft/unixcoder-base 
lr:  0.0002 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4988, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7917, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 5, Time: 0:01:48
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 1/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 679, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 37, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.054 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.05449189990758896, nan, nan, nan]
loss for labeled data =>  tensor(1.9396, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3727, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 10, Time: 0:03:31
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 2/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 687, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 289, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.421 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.4206695854663849, nan, nan]
loss for labeled data =>  tensor(2.6026, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.0563, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 15, Time: 0:05:36
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 3/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [702, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [114, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.162 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.16239316761493683, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9446, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.6461, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 20, Time: 0:07:21
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 4/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 713, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 109, 0]
psl_acc(PSL 평가에서의 정확도):  0.153 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.1528751701116562, nan]
loss for labeled data =>  tensor(2.5779, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(4.8073, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 25, Time: 0:09:08
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 5/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [650, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [106, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.163 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.16307692229747772, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.0639, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.2560, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:10:51
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 6/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 2, 690, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 1, 106, 0]
psl_acc(PSL 평가에서의 정확도):  0.155 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.5, 0.15362319350242615, nan]
loss for labeled data =>  tensor(2.1753, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7146, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 35, Time: 0:12:38
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 7/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 642]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 139]
psl_acc(PSL 평가에서의 정확도):  0.217 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.21651090681552887]
loss for labeled data =>  tensor(2.0151, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.1452, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 0:14:23
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 8/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 700, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 38, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.054 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.05428571254014969, nan, nan, nan]
loss for labeled data =>  tensor(3.1185, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.0225, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 45, Time: 0:16:10
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 9/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 651, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 271, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.416 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.41628265380859375, nan, nan]
loss for labeled data =>  tensor(3.9761, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(4.0348, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 0:17:53
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 10/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 10, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 5, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.5 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.5, nan, nan]
loss for labeled data =>  tensor(6.2187, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.9157, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 55, Time: 0:19:38
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 11/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 666, 1]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 105, 0]
psl_acc(PSL 평가에서의 정확도):  0.157 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.157657653093338, 0.0]
loss for labeled data =>  tensor(2.6204, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7732, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 0:21:24
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 12/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 682, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 108, 0]
psl_acc(PSL 평가에서의 정확도):  0.158 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.15835776925086975, nan]
loss for labeled data =>  tensor(2.5933, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(5.1119, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 65, Time: 0:23:09
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 13/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [625, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [102, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.163 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.1632000058889389, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.1208, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.1754, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 0:24:55
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 14/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [664, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [110, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.166 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.16566264629364014, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6694, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.9840, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 75, Time: 0:26:38
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 15/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [674, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [108, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.16 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.1602373868227005, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.3449, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(5.6605, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 0:28:24
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 16/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [27, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [5, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.185 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.18518517911434174, nan, nan, nan, nan]
loss for labeled data =>  tensor(6.5635, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.1392, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 85, Time: 0:30:09
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 17/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 562]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 123]
psl_acc(PSL 평가에서의 정확도):  0.219 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.21886120736598969]
loss for labeled data =>  tensor(2.2744, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5982, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 0:31:54
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 18/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 1, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.3751, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.0793, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 95, Time: 0:33:36
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 19/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 25

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [525, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [86, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.164 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.16380952298641205, nan, nan, nan, nan]
loss for labeled data =>  tensor(3.2977, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.3420, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 0:35:21
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 20/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 4, Correct Pseudo-Labels: 2, Train Data Number: 25


Training complete!
Total training took 0:35:21 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[42]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[42]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/unixcoder/joint_match//5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[42]_{'corcode'}/training_statistics.csv


Best_step:  15 
Best_val_epoch:  3 
best_val_acc:  0.4489795918367347 
best_val_test_acc:  0.35789473684210527 
best_val_test_f1:  0.1054263565891473
Save best record in:  ./experiment/jointmatch/log/unixcoder/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
