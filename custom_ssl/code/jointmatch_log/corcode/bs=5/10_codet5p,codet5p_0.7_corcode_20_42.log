current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs for corcod =>  5
Data set -> jointmatch
save_name: 10_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[42]_{'corcode'}

data_path:  ../data/jointmatch/corcode

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding']
**tokenizer type =  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding'] 

n_labeled_per_class:  10
train_df samples: 739
train_labeled_df samples: 50
train_unlabeled_df samples: 689
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 121), (2, 44), (3, 306), (4, 114), (5, 154)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 10), (2, 10), (3, 10), (4, 10), (5, 10)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 111), (2, 34), (3, 296), (4, 104), (5, 144)])
n_classes:  5

net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.0003 
lr_linear:  0.001 


net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.00025 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [1.0, 0.6, 0.2, 0.6, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5644, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5438, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 10, Time: 0:01:47
Train F1: 0.4144, Val F1: 0.2346, Test F1: 0.2639
Epoch 1/20, Train Acc: 0.4800, Val Acc: 0.2755, Test Acc: 0.3158, Test F1(macro): 0.2639, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4202, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3231, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 20, Time: 0:03:31
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 2/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4106, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.2584, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:05:16
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 3/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6132, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.3523, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 0:07:01
Train F1: 0.0667, Val F1: 0.0787, Test F1: 0.0752
Epoch 4/20, Train Acc: 0.2000, Val Acc: 0.2449, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.8, 0.0, 0.0, 0.4]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6019, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6951, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 0:08:42
Train F1: 0.1440, Val F1: 0.0764, Test F1: 0.0751
Epoch 5/20, Train Acc: 0.2400, Val Acc: 0.1020, Test Acc: 0.0947, Test F1(macro): 0.0751, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.1]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4307, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6280, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 0:10:27
Train F1: 0.1000, Val F1: 0.0741, Test F1: 0.1149
Epoch 6/20, Train Acc: 0.2200, Val Acc: 0.1531, Test Acc: 0.2526, Test F1(macro): 0.1149, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6629, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6145, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 70, Time: 0:12:32
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 7/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6462, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6024, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 0:14:16
Train F1: 0.0667, Val F1: 0.1239, Test F1: 0.1054
Epoch 8/20, Train Acc: 0.2000, Val Acc: 0.4490, Test Acc: 0.3579, Test F1(macro): 0.1054, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6118, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5975, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 0:15:58
Train F1: 0.0667, Val F1: 0.0500, Test F1: 0.0752
Epoch 9/20, Train Acc: 0.2000, Val Acc: 0.1429, Test Acc: 0.2316, Test F1(macro): 0.0752, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5888, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.5757, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 0:17:42
Train F1: 0.0667, Val F1: 0.0370, Test F1: 0.0449
Epoch 10/20, Train Acc: 0.2000, Val Acc: 0.1020, Test Acc: 0.1263, Test F1(macro): 0.0449, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.6, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4799, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6426, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 110, Time: 0:19:27
Train F1: 0.1959, Val F1: 0.0991, Test F1: 0.1355
Epoch 11/20, Train Acc: 0.3200, Val Acc: 0.1633, Test Acc: 0.2526, Test F1(macro): 0.1355, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.4, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5152, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6108, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 120, Time: 0:21:12
Train F1: 0.1857, Val F1: 0.1800, Test F1: 0.1908
Epoch 12/20, Train Acc: 0.2800, Val Acc: 0.2653, Test Acc: 0.2526, Test F1(macro): 0.1908, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.6, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3759, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6009, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 130, Time: 0:22:58
Train F1: 0.1924, Val F1: 0.1139, Test F1: 0.1416
Epoch 13/20, Train Acc: 0.3200, Val Acc: 0.1735, Test Acc: 0.2421, Test F1(macro): 0.1416, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6616, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.4829, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 140, Time: 0:24:39
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 14/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6626, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7068, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 150, Time: 0:26:23
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 15/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 0.9, 0.0, 0.5, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.5916, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6844, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 160, Time: 0:28:09
Train F1: 0.1568, Val F1: 0.0845, Test F1: 0.0550
Epoch 16/20, Train Acc: 0.2800, Val Acc: 0.1122, Test Acc: 0.0842, Test F1(macro): 0.0550, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [1.0, 0.4, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.4685, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6285, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 170, Time: 0:29:54
Train F1: 0.1857, Val F1: 0.1714, Test F1: 0.1600
Epoch 17/20, Train Acc: 0.2800, Val Acc: 0.1327, Test Acc: 0.1474, Test F1(macro): 0.1600, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [1.0, 0.4, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3837, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6058, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 180, Time: 0:31:36
Train F1: 0.1857, Val F1: 0.1714, Test F1: 0.1600
Epoch 18/20, Train Acc: 0.2800, Val Acc: 0.1327, Test Acc: 0.1474, Test F1(macro): 0.1600, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.3, 0.5, 0.0, 0.4, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.3534, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6069, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 190, Time: 0:33:21
Train F1: 0.2210, Val F1: 0.2505, Test F1: 0.2139
Epoch 19/20, Train Acc: 0.2400, Val Acc: 0.2041, Test Acc: 0.1789, Test F1(macro): 0.2139, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7577, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.6073, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 200, Time: 0:35:06
Train F1: 0.0667, Val F1: 0.0231, Test F1: 0.0200
Epoch 20/20, Train Acc: 0.2000, Val Acc: 0.0612, Test Acc: 0.0526, Test F1(macro): 0.0200, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 50


Training complete!
Total training took 0:35:06 (h:mm:ss)
Load model from ./experiment/jointmatch/output/10_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[42]_{'corcode'}_net0.pth
Load model from ./experiment/jointmatch/output/10_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[42]_{'corcode'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/codet5p/joint_match//10_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[42]_{'corcode'}/training_statistics.csv


Best_step:  70 
Best_val_epoch:  7 
best_val_acc:  0.4489795918367347 
best_val_test_acc:  0.35789473684210527 
best_val_test_f1:  0.1054263565891473
Save best record in:  ./experiment/jointmatch/log/codet5p/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
