current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs =>  7
Data set -> jointmatch
save_name: 5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[42]_{'python'}

data_path:  ../data/jointmatch/python

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base']
**tokenizer type =  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base'] 

n_labeled_per_class:  5
train_df samples: 3974
train_labeled_df samples: 35
train_unlabeled_df samples: 3939
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 704), (2, 514), (3, 707), (4, 585), (5, 580), (6, 426), (7, 458)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5), (6, 5), (7, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 699), (2, 509), (3, 702), (4, 580), (5, 575), (6, 421), (7, 453)])
n_classes:  7

net_arch:  microsoft/unixcoder-base 
lr:  0.0004 
lr_linear:  0.001 


net_arch:  microsoft/unixcoder-base 
lr:  0.0002 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 195, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 19, 0]
psl_acc(PSL 평가에서의 정확도):  0.097 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, 0.09743589907884598, nan]
loss for labeled data =>  tensor(2.0462, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9568, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 5, Time: 0:04:47
Train F1: 0.0357, Val F1: 0.0073, Test F1: 0.0654
Epoch 1/20, Train Acc: 0.1429, Val Acc: 0.0261, Test Acc: 0.2971, Test F1(macro): 0.0654, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 2965, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 429, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.145 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.14468802511692047, nan, nan]
loss for labeled data =>  tensor(2.8941, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.1450, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 10, Time: 0:10:51
Train F1: 0.0357, Val F1: 0.0358, Test F1: 0.0118
Epoch 2/20, Train Acc: 0.1429, Val Acc: 0.1433, Test Acc: 0.0430, Test F1(macro): 0.0118, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 3736, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 393, 0]
psl_acc(PSL 평가에서의 정확도):  0.105 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, 0.10519272089004517, nan]
loss for labeled data =>  tensor(3.0990, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.2467, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 15, Time: 0:18:42
Train F1: 0.0357, Val F1: 0.0073, Test F1: 0.0654
Epoch 3/20, Train Acc: 0.1429, Val Acc: 0.0261, Test Acc: 0.2971, Test F1(macro): 0.0654, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 2, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 3760]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 435]
psl_acc(PSL 평가에서의 정확도):  0.116 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, 0.11569149047136307]
loss for labeled data =>  tensor(2.3752, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.4335, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 20, Time: 0:26:42
Train F1: 0.0357, Val F1: 0.0300, Test F1: 0.0052
Epoch 4/20, Train Acc: 0.1429, Val Acc: 0.1173, Test Acc: 0.0184, Test F1(macro): 0.0052, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 3485, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 361, 0]
psl_acc(PSL 평가에서의 정확도):  0.104 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, 0.10358680039644241, nan]
loss for labeled data =>  tensor(2.6856, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.3286, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 25, Time: 0:34:43
Train F1: 0.0357, Val F1: 0.0073, Test F1: 0.0654
Epoch 5/20, Train Acc: 0.1429, Val Acc: 0.0261, Test Acc: 0.2971, Test F1(macro): 0.0654, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.5845, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.4753, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:42:33
Train F1: 0.0357, Val F1: 0.0239, Test F1: 0.0206
Epoch 6/20, Train Acc: 0.1429, Val Acc: 0.0912, Test Acc: 0.0779, Test F1(macro): 0.0206, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 3879]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 446]
psl_acc(PSL 평가에서의 정확도):  0.115 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, 0.11497808992862701]
loss for labeled data =>  tensor(3.4072, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.6690, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 35, Time: 0:50:14
Train F1: 0.0357, Val F1: 0.0300, Test F1: 0.0052
Epoch 7/20, Train Acc: 0.1429, Val Acc: 0.1173, Test Acc: 0.0184, Test F1(macro): 0.0052, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(3.9408, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(4.2537, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 40, Time: 0:58:28
Train F1: 0.0357, Val F1: 0.0531, Test F1: 0.0313
Epoch 8/20, Train Acc: 0.1429, Val Acc: 0.2280, Test Acc: 0.1230, Test F1(macro): 0.0313, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1, 3125, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 401, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.128 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.0, 0.12831999361515045, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(3.5192, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.1789, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 45, Time: 1:06:25
Train F1: 0.0357, Val F1: 0.0018, Test F1: 0.0623
Epoch 9/20, Train Acc: 0.1429, Val Acc: 0.0065, Test Acc: 0.2787, Test F1(macro): 0.0623, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [3905, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [689, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.176 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.17644046247005463, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(7.9699, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(4.1946, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 1:14:24
Train F1: 0.0357, Val F1: 0.0239, Test F1: 0.0206
Epoch 10/20, Train Acc: 0.1429, Val Acc: 0.0912, Test Acc: 0.0779, Test F1(macro): 0.0206, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 3437, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 490, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.143 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.14256618916988373, nan, nan, nan]
loss for labeled data =>  tensor(3.8357, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(5.2008, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 55, Time: 1:22:10
Train F1: 0.0357, Val F1: 0.0798, Test F1: 0.0398
Epoch 11/20, Train Acc: 0.1429, Val Acc: 0.3876, Test Acc: 0.1619, Test F1(macro): 0.0398, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [3901, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [693, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.178 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.17764675617218018, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.6595, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.8391, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 1:29:54
Train F1: 0.0357, Val F1: 0.0239, Test F1: 0.0206
Epoch 12/20, Train Acc: 0.1429, Val Acc: 0.0912, Test Acc: 0.0779, Test F1(macro): 0.0206, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 3266, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 592, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.181 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.18126147985458374, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.3525, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(4.1670, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 65, Time: 1:37:52
Train F1: 0.0357, Val F1: 0.0531, Test F1: 0.0313
Epoch 13/20, Train Acc: 0.1429, Val Acc: 0.2280, Test Acc: 0.1230, Test F1(macro): 0.0313, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 2, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(4.0543, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(5.2848, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 1:45:44
Train F1: 0.0357, Val F1: 0.0018, Test F1: 0.0623
Epoch 14/20, Train Acc: 0.1429, Val Acc: 0.0065, Test Acc: 0.2787, Test F1(macro): 0.0623, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 3925, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 573, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.146 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.14598725736141205, nan, nan]
loss for labeled data =>  tensor(4.1651, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.8416, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 75, Time: 1:53:22
Train F1: 0.0357, Val F1: 0.0358, Test F1: 0.0118
Epoch 15/20, Train Acc: 0.1429, Val Acc: 0.1433, Test Acc: 0.0430, Test F1(macro): 0.0118, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 3883, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 572, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.147 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.14730878174304962, nan, nan, nan]
loss for labeled data =>  tensor(4.0491, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(6.9834, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 2:01:11
Train F1: 0.0357, Val F1: 0.0798, Test F1: 0.0398
Epoch 16/20, Train Acc: 0.1429, Val Acc: 0.3876, Test Acc: 0.1619, Test F1(macro): 0.0398, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 3914, 0, 14, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 500, 0, 1, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.128 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.1277465522289276, nan, 0.0714285746216774, nan, nan, nan]
loss for labeled data =>  tensor(8.5381, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(4.3318, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 85, Time: 2:09:09
Train F1: 0.0357, Val F1: 0.0018, Test F1: 0.0623
Epoch 17/20, Train Acc: 0.1429, Val Acc: 0.0065, Test Acc: 0.2787, Test F1(macro): 0.0623, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 3887, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 501, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.129 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.12889117002487183, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(3.8093, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(7.6524, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 2:17:12
Train F1: 0.0357, Val F1: 0.0018, Test F1: 0.0623
Epoch 18/20, Train Acc: 0.1429, Val Acc: 0.0065, Test Acc: 0.2787, Test F1(macro): 0.0623, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 3857, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 561, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.145 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, 0.14544983208179474, nan, nan]
loss for labeled data =>  tensor(6.0661, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(5.2612, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 95, Time: 2:25:06
Train F1: 0.0357, Val F1: 0.0358, Test F1: 0.0118
Epoch 19/20, Train Acc: 0.1429, Val Acc: 0.1433, Test Acc: 0.0430, Test F1(macro): 0.0118, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 3758, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 673, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.179 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.17908461391925812, nan, nan, nan, nan]
loss for labeled data =>  tensor(3.6683, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(4.3438, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 2:32:18
Train F1: 0.0357, Val F1: 0.0531, Test F1: 0.0313
Epoch 20/20, Train Acc: 0.1429, Val Acc: 0.2280, Test Acc: 0.1230, Test F1(macro): 0.0313, Total Pseudo-Labels: 5, Correct Pseudo-Labels: 1, Train Data Number: 35


Training complete!
Total training took 2:32:18 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[42]_{'python'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[42]_{'python'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/unixcoder/joint_match//5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[42]_{'python'}/training_statistics.csv


Best_step:  55 
Best_val_epoch:  11 
best_val_acc:  0.38762214983713356 
best_val_test_acc:  0.16188524590163936 
best_val_test_f1:  0.0398085159989922
Save best record in:  ./experiment/jointmatch/log/unixcoder/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
