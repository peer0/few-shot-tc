current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs =>  7
Data set -> jointmatch
save_name: 5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[45]_{'python'}

data_path:  ../data/jointmatch/python

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding']
**tokenizer type =  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding'] 

n_labeled_per_class:  5
train_df samples: 3974
train_labeled_df samples: 35
train_unlabeled_df samples: 3939
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 704), (2, 514), (3, 707), (4, 585), (5, 580), (6, 426), (7, 458)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5), (6, 5), (7, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 699), (2, 509), (3, 702), (4, 580), (5, 575), (6, 421), (7, 453)])
n_classes:  7

net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.0003 
lr_linear:  0.001 


net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.00025 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [0.4, 0.0, 0.0, 0.0, 0.4, 1.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9310, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9311, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 5, Time: 0:07:55
Train F1: 0.3168, Val F1: 0.0189, Test F1: 0.0874
Epoch 1/20, Train Acc: 0.3714, Val Acc: 0.0326, Test Acc: 0.2930, Test F1(macro): 0.0874, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.2, 0.8, 0.0, 0.0, 0.0, 0.8, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8816, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8260, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 10, Time: 0:15:50
Train F1: 0.2710, Val F1: 0.0451, Test F1: 0.0901
Epoch 2/20, Train Acc: 0.3714, Val Acc: 0.0456, Test Acc: 0.2131, Test F1(macro): 0.0901, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.6, 0.0, 0.0, 0.0, 0.0, 0.6, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9662, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9417, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 15, Time: 0:23:46
Train F1: 0.0927, Val F1: 0.0048, Test F1: 0.0915
Epoch 3/20, Train Acc: 0.1714, Val Acc: 0.0163, Test Acc: 0.2930, Test F1(macro): 0.0915, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.4, 0.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8904, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9724, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 20, Time: 0:31:46
Train F1: 0.0928, Val F1: 0.0623, Test F1: 0.0195
Epoch 4/20, Train Acc: 0.1714, Val Acc: 0.1368, Test Acc: 0.0287, Test F1(macro): 0.0195, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.8, 0.0, 0.0, 0.0, 0.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9611, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9857, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 25, Time: 0:39:42
Train F1: 0.1108, Val F1: 0.0055, Test F1: 0.0782
Epoch 5/20, Train Acc: 0.2286, Val Acc: 0.0098, Test Acc: 0.2684, Test F1(macro): 0.0782, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.2, 0.8, 0.2, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9301, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9464, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 30, Time: 0:47:31
Train F1: 0.2217, Val F1: 0.0743, Test F1: 0.0346
Epoch 6/20, Train Acc: 0.3143, Val Acc: 0.2541, Test Acc: 0.0881, Test F1(macro): 0.0346, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.6, 0.0, 0.6, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8556, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9629, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 35, Time: 0:55:12
Train F1: 0.0771, Val F1: 0.0806, Test F1: 0.0841
Epoch 7/20, Train Acc: 0.1714, Val Acc: 0.2410, Test Acc: 0.2193, Test F1(macro): 0.0841, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.4, 0.0, 0.6, 0.0, 0.4, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9865, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9402, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 40, Time: 1:03:28
Train F1: 0.1520, Val F1: 0.1367, Test F1: 0.1143
Epoch 8/20, Train Acc: 0.2000, Val Acc: 0.3420, Test Acc: 0.2623, Test F1(macro): 0.1143, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.6, 0.0, 0.0, 0.8, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9492, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8660, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 45, Time: 1:11:44
Train F1: 0.0981, Val F1: 0.1174, Test F1: 0.0521
Epoch 9/20, Train Acc: 0.2000, Val Acc: 0.3909, Test Acc: 0.1537, Test F1(macro): 0.0521, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.6, 0.0, 0.0, 0.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9220, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8020, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 1:19:33
Train F1: 0.1212, Val F1: 0.0565, Test F1: 0.0298
Epoch 10/20, Train Acc: 0.2000, Val Acc: 0.2085, Test Acc: 0.1004, Test F1(macro): 0.0298, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.2, 0.8, 0.0, 0.0, 0.0, 0.0, 0.6]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7886, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9982, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 55, Time: 1:27:16
Train F1: 0.1765, Val F1: 0.0097, Test F1: 0.0649
Epoch 11/20, Train Acc: 0.2286, Val Acc: 0.0098, Test Acc: 0.2705, Test F1(macro): 0.0649, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.4, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7455, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7830, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 1:35:00
Train F1: 0.0909, Val F1: 0.0717, Test F1: 0.0190
Epoch 12/20, Train Acc: 0.2000, Val Acc: 0.1205, Test Acc: 0.0246, Test F1(macro): 0.0190, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7539, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9923, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 65, Time: 1:42:56
Train F1: 0.0510, Val F1: 0.0233, Test F1: 0.0161
Epoch 13/20, Train Acc: 0.1429, Val Acc: 0.0489, Test Acc: 0.0328, Test F1(macro): 0.0161, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.2, 0.0, 0.0, 0.2, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9522, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8522, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 1:50:53
Train F1: 0.1328, Val F1: 0.0298, Test F1: 0.0092
Epoch 14/20, Train Acc: 0.2000, Val Acc: 0.1140, Test Acc: 0.0225, Test F1(macro): 0.0092, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.2, 0.0, 0.0, 0.6, 0.0, 0.2, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8303, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7607, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 75, Time: 1:56:44
Train F1: 0.2010, Val F1: 0.1175, Test F1: 0.0924
Epoch 15/20, Train Acc: 0.2571, Val Acc: 0.2117, Test Acc: 0.1660, Test F1(macro): 0.0924, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7081, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9907, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 2:01:25
Train F1: 0.0357, Val F1: 0.0239, Test F1: 0.0206
Epoch 16/20, Train Acc: 0.1429, Val Acc: 0.0912, Test Acc: 0.0779, Test F1(macro): 0.0206, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.8]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7430, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.0819, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 85, Time: 2:06:05
Train F1: 0.1326, Val F1: 0.1078, Test F1: 0.0366
Epoch 17/20, Train Acc: 0.2571, Val Acc: 0.3713, Test Acc: 0.1025, Test F1(macro): 0.0366, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.6, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7114, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8473, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 2:10:45
Train F1: 0.1014, Val F1: 0.1003, Test F1: 0.0138
Epoch 18/20, Train Acc: 0.2286, Val Acc: 0.1433, Test Acc: 0.0225, Test F1(macro): 0.0138, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.2, 0.2, 0.0, 0.0, 0.0, 0.8, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8519, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7426, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 95, Time: 2:15:26
Train F1: 0.2075, Val F1: 0.0337, Test F1: 0.1084
Epoch 19/20, Train Acc: 0.3143, Val Acc: 0.0489, Test Acc: 0.2561, Test F1(macro): 0.1084, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0, 0.4, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8569, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7177, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 2:20:06
Train F1: 0.2157, Val F1: 0.0573, Test F1: 0.0321
Epoch 20/20, Train Acc: 0.3429, Val Acc: 0.1173, Test Acc: 0.0533, Test F1(macro): 0.0321, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35


Training complete!
Total training took 2:20:06 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[45]_{'python'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[45]_{'python'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/codet5p/joint_match//5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[45]_{'python'}/training_statistics.csv


Best_step:  45 
Best_val_epoch:  9 
best_val_acc:  0.39087947882736157 
best_val_test_acc:  0.15368852459016394 
best_val_test_f1:  0.05210888183024405
Save best record in:  ./experiment/jointmatch/log/codet5p/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
