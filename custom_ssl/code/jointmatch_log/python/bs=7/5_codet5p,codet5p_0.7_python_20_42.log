current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs =>  7
Data set -> jointmatch
save_name: 5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[42]_{'python'}

data_path:  ../data/jointmatch/python

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding']
**tokenizer type =  ['Salesforce/codet5p-110m-embedding', 'Salesforce/codet5p-110m-embedding'] 

n_labeled_per_class:  5
train_df samples: 3974
train_labeled_df samples: 35
train_unlabeled_df samples: 3939
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 704), (2, 514), (3, 707), (4, 585), (5, 580), (6, 426), (7, 458)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5), (6, 5), (7, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 699), (2, 509), (3, 702), (4, 580), (5, 575), (6, 421), (7, 453)])
n_classes:  7

net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.0003 
lr_linear:  0.001 


net_arch:  Salesforce/codet5p-110m-embedding 
lr:  0.00025 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9545, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9564, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 5, Time: 0:07:33
Train F1: 0.0357, Val F1: 0.0239, Test F1: 0.0206
Epoch 1/20, Train Acc: 0.1429, Val Acc: 0.0912, Test Acc: 0.0779, Test F1(macro): 0.0206, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.4, 0.8, 0.0, 0.0, 0.0, 1.0, 0.6]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9518, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7964, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 10, Time: 0:15:26
Train F1: 0.3128, Val F1: 0.0486, Test F1: 0.2283
Epoch 2/20, Train Acc: 0.4000, Val Acc: 0.0423, Test Acc: 0.4529, Test F1(macro): 0.2283, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.4, 0.8, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9604, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8068, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 15, Time: 0:23:28
Train F1: 0.1336, Val F1: 0.1498, Test F1: 0.0391
Epoch 3/20, Train Acc: 0.1714, Val Acc: 0.1857, Test Acc: 0.1107, Test F1(macro): 0.0391, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.2, 0.2, 0.0, 0.0, 0.2, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9549, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9330, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 20, Time: 0:31:23
Train F1: 0.0761, Val F1: 0.1007, Test F1: 0.0272
Epoch 4/20, Train Acc: 0.0857, Val Acc: 0.1205, Test Acc: 0.0553, Test F1(macro): 0.0272, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9728, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8814, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 25, Time: 0:39:07
Train F1: 0.0357, Val F1: 0.0018, Test F1: 0.0623
Epoch 5/20, Train Acc: 0.1429, Val Acc: 0.0065, Test Acc: 0.2787, Test F1(macro): 0.0623, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9606, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9750, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 30, Time: 0:46:49
Train F1: 0.0357, Val F1: 0.0798, Test F1: 0.0398
Epoch 6/20, Train Acc: 0.1429, Val Acc: 0.3876, Test Acc: 0.1619, Test F1(macro): 0.0398, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9494, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9479, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 35, Time: 0:54:41
Train F1: 0.0357, Val F1: 0.0531, Test F1: 0.0313
Epoch 7/20, Train Acc: 0.1429, Val Acc: 0.2280, Test Acc: 0.1230, Test F1(macro): 0.0313, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9387, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8991, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 1:02:31
Train F1: 0.0357, Val F1: 0.0300, Test F1: 0.0195
Epoch 8/20, Train Acc: 0.1429, Val Acc: 0.1173, Test Acc: 0.0225, Test F1(macro): 0.0195, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.2, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9322, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9011, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 45, Time: 1:10:24
Train F1: 0.0862, Val F1: 0.0104, Test F1: 0.0664
Epoch 9/20, Train Acc: 0.1714, Val Acc: 0.0261, Test Acc: 0.2930, Test F1(macro): 0.0664, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9754, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.0149, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 1:18:05
Train F1: 0.0357, Val F1: 0.0074, Test F1: 0.0834
Epoch 10/20, Train Acc: 0.1429, Val Acc: 0.0261, Test Acc: 0.2992, Test F1(macro): 0.0834, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.2, 0.8, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9400, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.0310, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 55, Time: 1:25:28
Train F1: 0.0606, Val F1: 0.0455, Test F1: 0.0485
Epoch 11/20, Train Acc: 0.1429, Val Acc: 0.0521, Test Acc: 0.1148, Test F1(macro): 0.0485, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9507, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9827, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 1:33:07
Train F1: 0.0357, Val F1: 0.0113, Test F1: 0.0702
Epoch 12/20, Train Acc: 0.1429, Val Acc: 0.0293, Test Acc: 0.2992, Test F1(macro): 0.0702, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.4, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9831, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8794, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 65, Time: 1:41:18
Train F1: 0.1100, Val F1: 0.0921, Test F1: 0.0478
Epoch 13/20, Train Acc: 0.2000, Val Acc: 0.3974, Test Acc: 0.1619, Test F1(macro): 0.0478, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.9464, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8588, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 1:49:01
Train F1: 0.0366, Val F1: 0.0515, Test F1: 0.0458
Epoch 14/20, Train Acc: 0.1429, Val Acc: 0.2150, Test Acc: 0.1270, Test F1(macro): 0.0458, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.4, 0.0, 0.6, 0.0, 0.2, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8346, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.0420, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 75, Time: 1:56:45
Train F1: 0.1126, Val F1: 0.0800, Test F1: 0.0555
Epoch 15/20, Train Acc: 0.1714, Val Acc: 0.1368, Test Acc: 0.0840, Test F1(macro): 0.0555, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.4, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7599, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8992, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 2:04:42
Train F1: 0.1055, Val F1: 0.0886, Test F1: 0.0645
Epoch 16/20, Train Acc: 0.2000, Val Acc: 0.3453, Test Acc: 0.1660, Test F1(macro): 0.0645, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.7751, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8870, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 85, Time: 2:12:39
Train F1: 0.0461, Val F1: 0.0248, Test F1: 0.0583
Epoch 17/20, Train Acc: 0.1429, Val Acc: 0.0814, Test Acc: 0.1270, Test F1(macro): 0.0583, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.4, 0.6, 0.0, 0.6, 0.6]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8080, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9724, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 2:20:34
Train F1: 0.2428, Val F1: 0.1181, Test F1: 0.1794
Epoch 18/20, Train Acc: 0.3143, Val Acc: 0.2150, Test Acc: 0.2664, Test F1(macro): 0.1794, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.6503, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9304, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 95, Time: 2:28:06
Train F1: 0.0397, Val F1: 0.0382, Test F1: 0.0259
Epoch 19/20, Train Acc: 0.1429, Val Acc: 0.1401, Test Acc: 0.0512, Test F1(macro): 0.0259, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.8, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8507, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.9694, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 2:36:03
Train F1: 0.1389, Val F1: 0.0530, Test F1: 0.0340
Epoch 20/20, Train Acc: 0.2571, Val Acc: 0.1336, Test Acc: 0.0615, Test F1(macro): 0.0340, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35


Training complete!
Total training took 2:36:03 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[42]_{'python'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[42]_{'python'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/codet5p/joint_match//5_['codet5p', 'codet5p']_[0.0003, 0.00025]_0.7_jointmatch_20_[42]_{'python'}/training_statistics.csv


Best_step:  65 
Best_val_epoch:  13 
best_val_acc:  0.3973941368078176 
best_val_test_acc:  0.16188524590163936 
best_val_test_f1:  0.047814498933901925
Save best record in:  ./experiment/jointmatch/log/codet5p/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
