current work directory:  /home/imsuhan22/few-shot-tc/custom_ssl/code

bs =>  7
Data set -> jointmatch
save_name: 5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[45]_{'java'}

data_path:  ../data/jointmatch/java

There are 1 GPU(s) available.
We will use the GPU- 0 Quadro RTX 8000

**line 107 모델 =>  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base']
**tokenizer type =  ['microsoft/unixcoder-base', 'microsoft/unixcoder-base'] 

n_labeled_per_class:  5
train_df samples: 3851
train_labeled_df samples: 35
train_unlabeled_df samples: 3816
Check n_smaples_per_class in the original training set:  OrderedDict([(1, 632), (2, 555), (3, 583), (4, 559), (5, 493), (6, 432), (7, 597)])
Check n_smaples_per_class in the labeled training set:  OrderedDict([(1, 5), (2, 5), (3, 5), (4, 5), (5, 5), (6, 5), (7, 5)])
Check n_smaples_per_class in the unlabeled training set:  OrderedDict([(1, 627), (2, 550), (3, 578), (4, 554), (5, 488), (6, 427), (7, 592)])
n_classes:  7

net_arch:  microsoft/unixcoder-base 
lr:  0.0004 
lr_linear:  0.001 


net_arch:  microsoft/unixcoder-base 
lr:  0.0002 
lr_linear:  0.001 

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(1.8352, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.8453, device='cuda:0', grad_fn=<NllLossBackward0>)
Save model to ./experiment/jointmatch/output/
Step 5, Time: 0:08:07
Train F1: 0.0376, Val F1: 0.0608, Test F1: 0.0397
Epoch 1/20, Train Acc: 0.1429, Val Acc: 0.2115, Test Acc: 0.1521, Test F1(macro): 0.0397, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 3746, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 562, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.15 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, 0.15002669394016266, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.0223, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(1.7798, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 10, Time: 0:14:32
Train F1: 0.0357, Val F1: 0.0698, Test F1: 0.0382
Epoch 2/20, Train Acc: 0.1429, Val Acc: 0.2115, Test Acc: 0.1544, Test F1(macro): 0.0382, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 3479, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 499, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.143 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.14343202114105225, nan, nan, nan]
loss for labeled data =>  tensor(3.0272, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.6067, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 15, Time: 0:20:22
Train F1: 0.0357, Val F1: 0.0684, Test F1: 0.0116
Epoch 3/20, Train Acc: 0.1429, Val Acc: 0.2064, Test Acc: 0.0425, Test F1(macro): 0.0116, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(3.2669, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.7301, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 20, Time: 0:26:09
Train F1: 0.0357, Val F1: 0.0666, Test F1: 0.0163
Epoch 4/20, Train Acc: 0.1429, Val Acc: 0.1997, Test Acc: 0.0604, Test F1(macro): 0.0163, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 3785, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 423, 0]
psl_acc(PSL 평가에서의 정확도):  0.112 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, 0.11175693571567535, nan]
loss for labeled data =>  tensor(3.4807, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.5658, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 25, Time: 0:32:00
Train F1: 0.0357, Val F1: 0.0000, Test F1: 0.0767
Epoch 5/20, Train Acc: 0.1429, Val Acc: 0.0000, Test Acc: 0.3669, Test F1(macro): 0.0767, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 3778, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 421, 0]
psl_acc(PSL 평가에서의 정확도):  0.111 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, 0.11143462359905243, nan]
loss for labeled data =>  tensor(2.4775, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(7.7969, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 30, Time: 0:37:49
Train F1: 0.0357, Val F1: 0.0000, Test F1: 0.0767
Epoch 6/20, Train Acc: 0.1429, Val Acc: 0.0000, Test Acc: 0.3669, Test F1(macro): 0.0767, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 3770, 0, 6, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 548, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.145 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.14535808563232422, nan, 0.0, nan]
loss for labeled data =>  tensor(6.4380, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.5051, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 35, Time: 0:43:39
Train F1: 0.0357, Val F1: 0.0684, Test F1: 0.0116
Epoch 7/20, Train Acc: 0.1429, Val Acc: 0.2064, Test Acc: 0.0425, Test F1(macro): 0.0116, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 3546]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 549]
psl_acc(PSL 평가에서의 정확도):  0.155 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, 0.15482233464717865]
loss for labeled data =>  tensor(2.4617, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(4.8622, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 40, Time: 0:49:28
Train F1: 0.0357, Val F1: 0.0000, Test F1: 0.0038
Epoch 8/20, Train Acc: 0.1429, Val Acc: 0.0000, Test Acc: 0.0134, Test F1(macro): 0.0038, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(4.0617, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(5.4271, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 45, Time: 0:55:16
Train F1: 0.0357, Val F1: 0.0357, Test F1: 0.0338
Epoch 9/20, Train Acc: 0.1429, Val Acc: 0.0981, Test Acc: 0.1342, Test F1(macro): 0.0338, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 3785, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 546, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.144 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, 0.14425362646579742, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(4.7208, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(4.7251, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 50, Time: 1:01:06
Train F1: 0.0357, Val F1: 0.0666, Test F1: 0.0163
Epoch 10/20, Train Acc: 0.1429, Val Acc: 0.1997, Test Acc: 0.0604, Test F1(macro): 0.0163, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 3793, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 552, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.146 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.14553123712539673, nan, nan, nan]
loss for labeled data =>  tensor(8.6340, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(6.9049, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 55, Time: 1:06:54
Train F1: 0.0357, Val F1: 0.0684, Test F1: 0.0116
Epoch 11/20, Train Acc: 0.1429, Val Acc: 0.2064, Test Acc: 0.0425, Test F1(macro): 0.0116, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(4.1860, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.1976, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 60, Time: 1:12:40
Train F1: 0.0357, Val F1: 0.0357, Test F1: 0.0338
Epoch 12/20, Train Acc: 0.1429, Val Acc: 0.0981, Test Acc: 0.1342, Test F1(macro): 0.0338, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 2, 3725]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 579]
psl_acc(PSL 평가에서의 정확도):  0.155 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, 0.0, 0.15543624758720398]
loss for labeled data =>  tensor(5.1373, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.1307, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 65, Time: 1:18:28
Train F1: 0.0357, Val F1: 0.0000, Test F1: 0.0038
Epoch 13/20, Train Acc: 0.1429, Val Acc: 0.0000, Test Acc: 0.0134, Test F1(macro): 0.0038, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 3805, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 427, 0]
psl_acc(PSL 평가에서의 정확도):  0.112 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, 0.11222076416015625, nan]
loss for labeled data =>  tensor(8.1307, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(5.2373, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 70, Time: 1:24:17
Train F1: 0.0357, Val F1: 0.0000, Test F1: 0.0767
Epoch 14/20, Train Acc: 0.1429, Val Acc: 0.0000, Test Acc: 0.3669, Test F1(macro): 0.0767, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 3760, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 424, 0]
psl_acc(PSL 평가에서의 정확도):  0.113 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, 0.11276596039533615, nan]
loss for labeled data =>  tensor(5.1119, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.2086, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 75, Time: 1:30:04
Train F1: 0.0357, Val F1: 0.0000, Test F1: 0.0767
Epoch 15/20, Train Acc: 0.1429, Val Acc: 0.0000, Test Acc: 0.3669, Test F1(macro): 0.0767, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 3, 0, 3786, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 423, 0]
psl_acc(PSL 평가에서의 정확도):  0.112 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.0, nan, 0.11172741651535034, nan]
loss for labeled data =>  tensor(12.8004, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.2784, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 80, Time: 1:35:52
Train F1: 0.0357, Val F1: 0.0000, Test F1: 0.0767
Epoch 16/20, Train Acc: 0.1429, Val Acc: 0.0000, Test Acc: 0.3669, Test F1(macro): 0.0767, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 1, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도): None 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(3.7965, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.9091, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 85, Time: 1:41:37
Train F1: 0.0357, Val F1: 0.0357, Test F1: 0.0338
Epoch 17/20, Train Acc: 0.1429, Val Acc: 0.0981, Test Acc: 0.1342, Test F1(macro): 0.0338, Total Pseudo-Labels: 0, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 3758, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 548, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.146 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, 0.14582224190235138, nan, nan, nan]
loss for labeled data =>  tensor(3.6155, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(2.6888, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 90, Time: 1:47:24
Train F1: 0.0357, Val F1: 0.0684, Test F1: 0.0116
Epoch 18/20, Train Acc: 0.1429, Val Acc: 0.2064, Test Acc: 0.0425, Test F1(macro): 0.0116, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [0, 0, 0, 0, 0, 3809, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [0, 0, 0, 0, 0, 425, 0]
psl_acc(PSL 평가에서의 정확도):  0.112 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [nan, nan, nan, nan, nan, 0.1115778386592865, nan]
loss for labeled data =>  tensor(2.7696, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.7001, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 95, Time: 1:53:13
Train F1: 0.0357, Val F1: 0.0000, Test F1: 0.0767
Epoch 19/20, Train Acc: 0.1429, Val Acc: 0.0000, Test Acc: 0.3669, Test F1(macro): 0.0767, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 35

acc_train_cw(현재 train의 class별 acc) [1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
cw_psl_total_eval(pseudo label 클래스별 총 샘플 수):  [1801, 0, 0, 0, 0, 0, 0]
cw_psl_correct_eval(pseudo label 클래스별 맞은 샘플 수):  [283, 0, 0, 0, 0, 0, 0]
psl_acc(PSL 평가에서의 정확도):  0.157 
cw_psl_acc(클래스별 PSL 평가에서의 정확도):  [0.15713492035865784, nan, nan, nan, nan, nan, nan]
loss for labeled data =>  tensor(2.3549, device='cuda:0', grad_fn=<NllLossBackward0>)
loss for labeled data =>  tensor(3.7334, device='cuda:0', grad_fn=<NllLossBackward0>)
Step 100, Time: 1:58:59
Train F1: 0.0357, Val F1: 0.0357, Test F1: 0.0338
Epoch 20/20, Train Acc: 0.1429, Val Acc: 0.0981, Test Acc: 0.1342, Test F1(macro): 0.0338, Total Pseudo-Labels: 1, Correct Pseudo-Labels: 0, Train Data Number: 35


Training complete!
Total training took 1:58:59 (h:mm:ss)
Load model from ./experiment/jointmatch/output/5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[45]_{'java'}_net0.pth
Load model from ./experiment/jointmatch/output/5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[45]_{'java'}_net1.pth
Save training statistics in:  ./experiment/jointmatch/log/unixcoder/joint_match//5_['unixcoder', 'unixcoder']_[0.0004, 0.0002]_0.7_jointmatch_20_[45]_{'java'}/training_statistics.csv


Best_step:  5 
Best_val_epoch:  1 
best_val_acc:  0.21150592216582065 
best_val_test_acc:  0.15212527964205816 
best_val_test_f1:  0.039731229915279
Save best record in:  ./experiment/jointmatch/log/unixcoder/joint_match/summary.csv
Save best record in:  ./experiment/jointmatch/log/summary_avgrun.csv
